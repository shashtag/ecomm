[{"/Users/shashwatgupta/Desktop/react projects/kalafax/src/index.js":"1","/Users/shashwatgupta/Desktop/react projects/kalafax/src/App.js":"2","/Users/shashwatgupta/Desktop/react projects/kalafax/src/reportWebVitals.js":"3","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Theme.js":"4","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/LandingPage.js":"5","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Login.js":"6","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation.js":"7","/Users/shashwatgupta/Desktop/react projects/kalafax/src/assets/authImgs/basicDetailsIcon.js":"8","/Users/shashwatgupta/Desktop/react projects/kalafax/src/assets/authImgs/verifyIcon.js":"9","/Users/shashwatgupta/Desktop/react projects/kalafax/src/assets/authImgs/protectIcon.js":"10","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/Header.js":"11","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/SubHeader.js":"12","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/Categories.js":"13","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Hero.js":"14","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/PaysArtist.js":"15","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Usp.js":"16","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/TimelineComp.js":"17","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Featured.js":"18","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/Form2.js":"19","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/Form3.js":"20","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Signup.js":"21","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/Form1A.js":"22","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Footer.js":"23","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Trending.js":"24","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Product.js":"25","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/SignupContext.js":"26","/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Post.js":"27","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Loading.js":"28","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/SignupDialog.js":"29","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Logo.js":"30","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ArtistProfile.js":"31","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Temp.js":"32","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistProfile/Page1.js":"33","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/APContext.js":"34","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistProfile/Page2.js":"35","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistProfile/Page3.js":"36","/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Get.js":"37","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Notif.js":"38","/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Patch.js":"39","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/UIContext.js":"40","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ProductDetails.js":"41","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/HeaderIcons.js":"42","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ArtistDashboard.js":"43","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/DashboardCards.js":"44","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/DashboardCard.js":"45","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/ArtistDrawer.js":"46","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/TopListings.js":"47","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/TopListing.js":"48","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/UploadProduct.js":"49","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/ADashboardContext.js":"50","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Help.js":"51","/Users/shashwatgupta/Desktop/react projects/kalafax/src/serviceWorkerRegistration.js":"52","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Search.js":"53","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Verification.js":"54","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/AboutUs.js":"55","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/DropZone.js":"56","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ArtistPage.js":"57","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Products.js":"58","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/UnderConstruction.js":"59","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/LoadingLazy.js":"60","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/ScrollTop.js":"61","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ProfileUpdate.js":"62","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Address.js":"63","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/NewAddress.js":"64","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Cart.js":"65","/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Delete.js":"66","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/CartItem.js":"67","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/SelectAddress.js":"68","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/OrderContext.js":"69","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/AllOrders.js":"70","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/SuccessOrder.js":"71","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Admin.js":"72","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/AOrders.js":"73","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/OrderItem.js":"74"},{"size":1058,"mtime":1620242546456,"results":"75","hashOfConfig":"76"},{"size":8212,"mtime":1620261511783,"results":"77","hashOfConfig":"76"},{"size":362,"mtime":1611987058802,"results":"78","hashOfConfig":"76"},{"size":3105,"mtime":1617763965307,"results":"79","hashOfConfig":"76"},{"size":1102,"mtime":1620261121559,"results":"80","hashOfConfig":"76"},{"size":6758,"mtime":1618748548369,"results":"81","hashOfConfig":"76"},{"size":820,"mtime":1620261277589,"results":"82","hashOfConfig":"76"},{"size":756,"mtime":1613168241918,"results":"83","hashOfConfig":"76"},{"size":3778,"mtime":1613168268023,"results":"84","hashOfConfig":"76"},{"size":1818,"mtime":1613168256655,"results":"85","hashOfConfig":"76"},{"size":22097,"mtime":1620267903564,"results":"86","hashOfConfig":"76"},{"size":2988,"mtime":1617967658033,"results":"87","hashOfConfig":"76"},{"size":1911,"mtime":1618748243741,"results":"88","hashOfConfig":"76"},{"size":4432,"mtime":1620245172045,"results":"89","hashOfConfig":"76"},{"size":2891,"mtime":1619304749790,"results":"90","hashOfConfig":"76"},{"size":4318,"mtime":1620282724465,"results":"91","hashOfConfig":"76"},{"size":2685,"mtime":1615848220809,"results":"92","hashOfConfig":"76"},{"size":373,"mtime":1617848344281,"results":"93","hashOfConfig":"94"},{"size":2345,"mtime":1618748313162,"results":"95","hashOfConfig":"76"},{"size":7295,"mtime":1618648699775,"results":"96","hashOfConfig":"76"},{"size":8347,"mtime":1620282514733,"results":"97","hashOfConfig":"76"},{"size":5002,"mtime":1618749224634,"results":"98","hashOfConfig":"76"},{"size":12139,"mtime":1619316636462,"results":"99","hashOfConfig":"76"},{"size":2137,"mtime":1618751597574,"results":"100","hashOfConfig":"76"},{"size":1369,"mtime":1618748377788,"results":"101","hashOfConfig":"76"},{"size":921,"mtime":1619219237612,"results":"102","hashOfConfig":"76"},{"size":6060,"mtime":1620286112740,"results":"103","hashOfConfig":"76"},{"size":656,"mtime":1619370973686,"results":"104","hashOfConfig":"76"},{"size":1502,"mtime":1617848260430,"results":"105","hashOfConfig":"76"},{"size":323,"mtime":1615940356260,"results":"106","hashOfConfig":"76"},{"size":1344,"mtime":1620152318541,"results":"107","hashOfConfig":"76"},{"size":0,"mtime":1615952551673,"results":"108","hashOfConfig":"76"},{"size":4667,"mtime":1619678770134,"results":"109","hashOfConfig":"76"},{"size":2015,"mtime":1619678984322,"results":"110","hashOfConfig":"76"},{"size":5737,"mtime":1620152269166,"results":"111","hashOfConfig":"76"},{"size":7047,"mtime":1620252181486,"results":"112","hashOfConfig":"76"},{"size":4061,"mtime":1620260760496,"results":"113","hashOfConfig":"76"},{"size":1511,"mtime":1619206853738,"results":"114","hashOfConfig":"76"},{"size":4061,"mtime":1620287358743,"results":"115","hashOfConfig":"76"},{"size":1758,"mtime":1619669831497,"results":"116","hashOfConfig":"76"},{"size":8150,"mtime":1619586215650,"results":"117","hashOfConfig":"76"},{"size":3193,"mtime":1620260656895,"results":"118","hashOfConfig":"76"},{"size":3857,"mtime":1620252887907,"results":"119","hashOfConfig":"76"},{"size":1413,"mtime":1620057243901,"results":"120","hashOfConfig":"76"},{"size":864,"mtime":1620057139085,"results":"121","hashOfConfig":"76"},{"size":4589,"mtime":1619211159593,"results":"122","hashOfConfig":"76"},{"size":1366,"mtime":1619206302753,"results":"123","hashOfConfig":"76"},{"size":4573,"mtime":1620268495358,"results":"124","hashOfConfig":"76"},{"size":11457,"mtime":1620154104726,"results":"125","hashOfConfig":"76"},{"size":1394,"mtime":1620154011702,"results":"126","hashOfConfig":"76"},{"size":1594,"mtime":1619210851704,"results":"127","hashOfConfig":"76"},{"size":5097,"mtime":1617941609234,"results":"128","hashOfConfig":"76"},{"size":3484,"mtime":1619702235109,"results":"129","hashOfConfig":"76"},{"size":1198,"mtime":1618745341563,"results":"130","hashOfConfig":"76"},{"size":7599,"mtime":1618479943420,"results":"131","hashOfConfig":"76"},{"size":1980,"mtime":1619203243912,"results":"132","hashOfConfig":"76"},{"size":2901,"mtime":1619371523378,"results":"133","hashOfConfig":"76"},{"size":424,"mtime":1618704941602,"results":"134","hashOfConfig":"76"},{"size":814,"mtime":1618738634286,"results":"135","hashOfConfig":"76"},{"size":494,"mtime":1618748643794,"results":"136","hashOfConfig":"76"},{"size":329,"mtime":1618676105807,"results":"137","hashOfConfig":"76"},{"size":10579,"mtime":1620286894090,"results":"138","hashOfConfig":"76"},{"size":2987,"mtime":1620152976311,"results":"139","hashOfConfig":"76"},{"size":2275,"mtime":1620152624153,"results":"140","hashOfConfig":"76"},{"size":3604,"mtime":1620241481124,"results":"141","hashOfConfig":"76"},{"size":1719,"mtime":1620268731201,"results":"142","hashOfConfig":"76"},{"size":8265,"mtime":1620242773608,"results":"143","hashOfConfig":"76"},{"size":3059,"mtime":1619758315473,"results":"144","hashOfConfig":"76"},{"size":1801,"mtime":1619718017760,"results":"145","hashOfConfig":"76"},{"size":2564,"mtime":1620272019353,"results":"146","hashOfConfig":"76"},{"size":1722,"mtime":1619903618335,"results":"147","hashOfConfig":"76"},{"size":344,"mtime":1620259799062,"results":"148","hashOfConfig":"76"},{"size":102,"mtime":1620260163147,"results":"149","hashOfConfig":"76"},{"size":7585,"mtime":1620281594900,"results":"150","hashOfConfig":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"1rqcv82",{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"153"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"153"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"153"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},"1tifubh",{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"153"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"153"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"153"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"153"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"153"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"153"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"153"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"153"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"153"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"153"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"153"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"153"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"153"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"153"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"153"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"153"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"153"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"153"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"153"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"153"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"153"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"153"},"/Users/shashwatgupta/Desktop/react projects/kalafax/src/index.js",[],["331","332"],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/App.js",["333","334"],"import React, { lazy, Suspense } from \"react\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./ui/Theme\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./pages/LandingPage\";\n\n// import Login from \"./pages/Login\";\nimport Navigation from \"./components/Navigation\";\nimport Temp from \"./Temp\";\nimport Footer from \"./components/Footer\";\nimport Loading from \"./ui/Loading\";\nimport Notif from \"./ui/Notif\";\nimport Verification from \"./pages/Verification\";\nimport UnderConstruction from \"./pages/UnderConstruction\";\nimport LoadingLazy from \"./ui/LoadingLazy\";\nimport { OrderProvider } from \"./Context/OrderContext\";\nimport SelectAddress from \"./pages/SelectAddress\";\nimport AllOrders from \"./pages/AllOrders\";\nimport SuccessOrder from \"./pages/SuccessOrder\";\nimport Admin from \"./pages/Admin\";\nimport AOrders from \"./pages/AOrders\";\n\nconst Signup = lazy(() => import(\"./pages/Signup\"));\nconst ArtistProfile = lazy(() => import(\"./pages/ArtistProfile\"));\nconst AboutUs = lazy(() => import(\"./pages/AboutUs\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\nconst Help = lazy(() => import(\"./pages/Help\"));\nconst ArtistPage = lazy(() => import(\"./pages/ArtistPage\"));\nconst Search = lazy(() => import(\"./pages/Search\"));\nconst ArtistDashboard = lazy(() => import(\"./pages/ArtistDashboard\"));\nconst ProductDetails = lazy(() => import(\"./pages/ProductDetails\"));\nconst ProfileUpdate = lazy(() => import(\"./pages/ProfileUpdate\"));\nconst Cart = lazy(() => import(\"./pages/Cart\"));\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Loading />\n      <Notif />\n      <OrderProvider>\n        <Switch>\n          <Route path='/login'>\n            <Suspense fallback={<LoadingLazy />}>\n              <Login />\n            </Suspense>\n          </Route>\n          <Route\n            path='/artist/signup'\n            render={() => (\n              <Suspense fallback={<LoadingLazy />}>\n                <Signup type='artist' />{\" \"}\n              </Suspense>\n            )}\n          />\n          <Route\n            path='/artist/profile'\n            render={() => (\n              <Suspense fallback={<LoadingLazy />}>\n                <ArtistProfile />{\" \"}\n              </Suspense>\n            )}\n          />\n\n          <Route\n            path='/artist/dashboard'\n            render={() => (\n              <>\n                <Navigation noCat={true} noSub={true} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <ArtistDashboard />{\" \"}\n                </Suspense>\n              </>\n            )}\n          />\n          <Route\n            path='/artist/:url'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <ArtistPage artist={false} />\n                </Suspense>\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/user/signup'\n            render={() => (\n              <Suspense fallback={<LoadingLazy />}>\n                <Signup type='user' />\n              </Suspense>\n            )}\n          />\n          <Route\n            path='/user/profile'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={true} />\n\n                <Suspense fallback={<LoadingLazy />}>\n                  <ProfileUpdate />\n                </Suspense>\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/product/:pid'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <ProductDetails />{\" \"}\n                </Suspense>\n\n                <Footer />\n              </>\n            )}\n          />\n          <Route path='/temp' render={() => <Temp />} />\n          <Route\n            exact\n            path='/search/:query'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <Search trending={false} />\n                </Suspense>\n\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            exact\n            path='/search/:query/:page'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <Search trending={false} />\n                </Suspense>\n\n                <Footer />\n              </>\n            )}\n          />\n\n          <Route\n            exact\n            path='/trending'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <Search trending={true} />\n                </Suspense>\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            exact\n            path='/trending/:page'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <Search trending={true} />\n                </Suspense>\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/activate/:id/:code'\n            render={() => (\n              <>\n                <Verification />\n              </>\n            )}\n          />\n          <Route\n            path='/contact'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <Help standalone={true} />\n                </Suspense>\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/about-us'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <AboutUs />\n                </Suspense>\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/user/trackOrder'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={true} />\n                <AllOrders admin={false} />\n                <Footer />\n              </>\n            )}\n          />\n\n          <Route\n            path='/cart'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={true} />\n                <Suspense fallback={<LoadingLazy />}>\n                  <Cart />\n                </Suspense>\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/selectAddress'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={true} />\n\n                <SelectAddress />\n\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/successOrder'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={true} />\n\n                <SuccessOrder />\n\n                <Footer />\n              </>\n            )}\n          />\n          <Route\n            path='/admin/orders'\n            render={() => (\n              <>\n                <Navigation noCat={true} noSub={true} />\n\n                <AllOrders admin={true} />\n              </>\n            )}\n          />\n          <Route\n            path='/admin'\n            render={() => (\n              <>\n                <Navigation noCat={true} noSub={true} />\n\n                <Admin />\n              </>\n            )}\n          />\n\n          <Route\n            path='/'\n            render={() => (\n              <>\n                <Navigation noCat={false} noSub={false} />\n                <LandingPage />\n                <Footer />\n              </>\n            )}\n          />\n        </Switch>\n      </OrderProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/reportWebVitals.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Theme.js",["335"],"import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nconst darkBlue = \"#152238\",\n  black = \"#0a0a0a\",\n  white = \"#FFF\";\n\nlet theme = createMuiTheme({\n  palette: {\n    background: {\n      gradient: {\n        background: \"linear-gradient(90.04deg, #FFB800 0%, #FF4185 99.67%)\",\n      },\n    },\n    common: {\n      black: black,\n      darkBlue: darkBlue,\n      white: white,\n    },\n    primary: {\n      main: white,\n    },\n    secondary: {\n      main: darkBlue,\n      light: \"#40567A\",\n    },\n    text: {\n      primary: \"#152238\",\n      secondary: \"#262626\",\n    },\n  },\n  typography: {\n    fontSize: 16,\n    fontFamily: \"Lato\",\n    body2: {\n      fontSize: \"0.5rem\",\n      fontWeight: \"400\",\n      lineHeight: 1.25,\n    },\n    body1: {\n      fontSize: \"1.25rem\",\n      fontWeight: \"600\",\n      lineHeight: 1.25,\n    },\n    h1: {\n      fontFamily: \"Josefin Sans\",\n      fontSize: \"4.5rem\",\n      fontWeight: \"bold\",\n      lineHeight: \"1\",\n    },\n\n    h2: {\n      fontSize: \"3rem\",\n      fontWeight: \"300\",\n\n      lineHeight: \"1.25\",\n    },\n    h3: {\n      fontSize: \"2rem\",\n      fontWeight: \"700\",\n      lineHeight: 1.5,\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n      fontWeight: \"600\",\n      lineHeight: 1.2,\n    },\n    h5: {\n      fontSize: \"1.25rem\",\n      fontWeight: \"400\",\n      lineHeight: 1.2,\n    },\n    h6: {\n      fontSize: \"1rem\",\n      fontWeight: \"500\",\n      lineHeight: \"1.50\",\n    },\n    caption: {\n      fontSize: \"0.875rem\",\n      fontWeight: \"400\",\n\n      lineHeight: \"1.25\",\n    },\n    button: {\n      textTransform: \"none\",\n    },\n    subtitle2: {\n      lineHeight: \"1.25\",\n      fontSize: \"0.75rem\",\n      fontWeight: \"400\",\n    },\n    subtitle1: {\n      lineHeight: \"1.25\",\n      fontSize: \"0.625rem\",\n      fontWeight: \"400\",\n    },\n  },\n  shape: {\n    borderRadius: 6,\n  },\n\n  overrides: {\n    // MuiAlert: {\n    //   icon: {\n    //     fontSize: \"24px\",\n    //   },\n    // },\n    MuiPickersToolbar: {\n      toolbar: {\n        backgroundColor: darkBlue,\n      },\n    },\n    MuiPickersToolbarText: {\n      toolbarTxt: {\n        color: white,\n      },\n      toolbarBtnSelected: { color: white },\n    },\n    MuiPickersCalendarHeader: {\n      switchHeader: {\n        // backgroundColor: lightBlue.A200,\n        color: darkBlue,\n      },\n    },\n    MuiPickersDay: {\n      day: {\n        color: \"#40567A\",\n      },\n      daySelected: {\n        backgroundColor: \"#E1E1E1\",\n        \"&:hover\": {\n          backgroundColor: \"#D1D1D1\",\n        },\n      },\n      dayDisabled: {\n        color: \"#849ABE\",\n      },\n      current: {\n        color: \"#40567A\",\n      },\n    },\n    MuiPickersModal: {\n      dialogAction: {\n        color: \"red\",\n      },\n    },\n    MuiPickersYear: {\n      yearSelected: {\n        color: darkBlue,\n      },\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nconst {\n  breakpoints,\n  typography: { pxToRem },\n} = theme;\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiTypography: {\n      h1: {\n        [breakpoints.down(\"xs\")]: {\n          fontSize: \"3.5rem\",\n        },\n      },\n    },\n  },\n};\n\nconsole.log(theme);\n\nexport default theme;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/LandingPage.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Login.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation.js",["336"],"import React, { useContext } from \"react\";\nimport SubHeader from \"./Navigation/SubHeader\";\n\nimport Header from \"./Navigation/Header\";\nimport Categories from \"./Navigation/Categories\";\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { DomainPropTypes } from \"@material-ui/pickers/constants/prop-types\";\nimport { UIContext } from \"../Context/UIContext\";\n\nconst Navigation = (props) => {\n  const { token, usrBaseInfo } = useContext(UIContext);\n  const theme = useTheme();\n  const md = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  if (!usrBaseInfo && token) {\n    return <div style={{ height: \"10vh\" }}></div>;\n  }\n\n  return (\n    <>\n      {props.noSub || token ? null : <SubHeader />}\n      <Header />\n      {md ? props.noCat ? null : <Categories /> : null}\n    </>\n  );\n};\n\nexport default Navigation;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/assets/authImgs/basicDetailsIcon.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/assets/authImgs/verifyIcon.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/assets/authImgs/protectIcon.js",[],["337","338"],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/Header.js",["339"],"import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  AppBar,\n  fade,\n  makeStyles,\n  Typography,\n  useTheme,\n  Button,\n  IconButton,\n  useMediaQuery,\n  Drawer,\n  List,\n  ListItem,\n  Divider,\n} from \"@material-ui/core\";\nimport { PersonOutline } from \"@material-ui/icons\";\n\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\nimport facebook from \"../../assets/socialIcons/facebook.png\";\nimport instagram from \"../../assets/socialIcons/instagram.png\";\nimport linkedIn from \"../../assets/socialIcons/linkedIn.png\";\nimport twitter from \"../../assets/socialIcons/twitter.png\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport BallotOutlinedIcon from \"@material-ui/icons/BallotOutlined\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport { Menu } from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport logoMain from \"../../assets/logoMain.png\";\nimport sellDes from \"../../assets/sellDes.png\";\nimport { UIContext } from \"../../Context/UIContext\";\nimport HeaderIcons from \"./HeaderIcons\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { logout } from \"../../API/Post\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  grow2: {\n    flexGrow: 4,\n  },\n\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    border: `1px ${theme.palette.secondary.main} solid`,\n    display: \"flex\",\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginTop: theme.spacing(0.5),\n    height: \"36px\",\n    width: \"100%\",\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    ...theme.typography.caption,\n    color: theme.palette.secondary.main,\n    padding: theme.spacing(1, 1, 1, 1),\n    // vertical padding + font size from searchIcon\n    transition: theme.transitions.create(\"width\"),\n    // marginLeft: theme.spacing(2),\n    width: \"100%\",\n    \"&::placeholder\": {\n      color: theme.palette.secondary.light,\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  location: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  icon: {\n    padding: theme.spacing(1.5, 1.25, 1, 1.25),\n  },\n  name: {\n    background: \"-webkit-linear-gradient(90.04deg, #FFB800 0%, #FF4185 99.67%\",\n\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: \"transparent\",\n  },\n}));\n\nexport default function Header(props) {\n  const history = useHistory();\n  const classes = useStyles();\n  const theme = useTheme();\n  const md = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const [drawer, setDrawer] = useState(false);\n  const {\n    setLoading,\n    setUsrBaseInfo,\n    setToken,\n    search,\n    setSearch,\n  } = useContext(UIContext);\n\n  useEffect(() => {\n    if (md) {\n      window.addEventListener(\"resize\", () => setDrawer(false));\n    }\n    return () => {};\n  }, [md]);\n\n  const { token, usrBaseInfo } = useContext(UIContext);\n  // useEffect(() => {\n  //   // name = usrBaseInfo?.full_name;\n  //   console.log(usrBaseInfo);\n  // }, [usrBaseInfo]);\n  const desktop = token ? (\n    <div\n      style={{ justifyContent: \"flex-end\" }}\n      className={[classes.sectionDesktop].join(\" \")}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        className={classes.grow}>\n        {/* <Button component={Link} to='/'>\n          <Typography\n            variant='h6'\n            color='secondary'\n            noWrap\n            style={{ fontWeight: \"600\" }}>\n            How we work\n          </Typography>\n\n          <ArrowDropDownSharpIcon\n            style={{ color: theme.palette.secondary.main }}\n          />\n        </Button> */}\n      </div>\n      <Typography\n        variant='h6'\n        style={{ fontWeight: \"600\", marginRight: theme.spacing(2) }}>\n        <span style={{ fontWeight: \"500\" }}>Hello</span>{\" \"}\n        <span\n          style={{\n            background:\n              \"-webkit-linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n            WebkitBackgroundClip: \"text\",\n            WebkitTextFillColor: \"transparent\",\n          }}>\n          {usrBaseInfo?.full_name?.split(\" \")[0]}\n        </span>\n      </Typography>\n      {usrBaseInfo?.is_kalafex_admin ? (\n        <>\n          <Button\n            component={Link}\n            style={{ margin: theme.spacing(0, 2) }}\n            to='/admin/orders'>\n            <Typography\n              variant='h6'\n              color='secondary'\n              noWrap\n              style={{ fontWeight: \"600\" }}>\n              Orders\n            </Typography>\n          </Button>\n\n          <Button\n            component={Link}\n            style={{ margin: theme.spacing(0, 2) }}\n            to='/admin/cashout'>\n            <Typography\n              variant='h6'\n              color='secondary'\n              noWrap\n              style={{ fontWeight: \"600\" }}>\n              Cashouts\n            </Typography>\n          </Button>\n        </>\n      ) : null}\n      <HeaderIcons />\n    </div>\n  ) : (\n    <div\n      style={{ justifyContent: \"flex-end\" }}\n      className={[classes.sectionDesktop].join(\" \")}>\n      {/* <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        className={classes.grow}>\n        <Button component={Link} to='/'>\n          <Typography\n            variant='h6'\n            color='secondary'\n            noWrap\n            style={{ fontWeight: \"600\" }}>\n            How we work\n          </Typography>\n\n          <ArrowDropDownSharpIcon\n            style={{ color: theme.palette.secondary.main }}\n          />\n        </Button>\n      </div> */}\n      <Button\n        component={Link}\n        to='/artist/signup'\n        style={{\n          marginRight: theme.spacing(0.5),\n          padding: theme.spacing(1.3),\n        }}>\n        {/* <Link to='/artist/signup'> */}\n        <img height='auto' width='auto' src={sellDes} alt='kalafex logo' />\n        {/* </Link> */}\n      </Button>\n      <div\n        style={{\n          borderRight: `2px ${theme.palette.secondary.main} solid`,\n          marginRight: theme.spacing(1.5),\n          height: \"36px\",\n        }}\n      />\n      <Button\n        component={Link}\n        to='/login'\n        variant='contained'\n        size='large'\n        color='secondary'>\n        <Typography variant='h6'>Login/Signup</Typography>\n      </Button>\n      {token ? (\n        <IconButton\n          onClick={() => {\n            history.push(\"/cart\");\n          }}\n          style={{ marginLeft: theme.spacing(2) }}>\n          <ShoppingCartOutlinedIcon\n            style={{\n              color: theme.palette.secondary.main,\n            }}\n          />\n        </IconButton>\n      ) : null}\n    </div>\n  );\n\n  return (\n    <>\n      <AppBar\n        position='static'\n        elevation={1}\n        style={{\n          paddingTop: \"8px\",\n          borderBottom: `0.5px solid ${theme.palette.grey[300]}`,\n        }}>\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\n          <div style={{ display: \"flex\" }} className={classes.grow2}>\n            <Link to='/'>\n              <img\n                height='50px'\n                width='81.71px'\n                src={\n                  // md ?\n                  logoMain\n                  // : logoMainSm\n                }\n                alt='kalafax logo'\n              />\n            </Link>\n            {/* <div className={classes.location}>\n              <RoomOutlinedIcon\n                style={{ color: theme.palette.secondary.main }}\n              />\n              <div\n                style={{\n                  fontFamily: \"Lato\",\n                  fontSize: \"10px\",\n                  fontWeight: 400,\n                  lineHeight: \"10px\",\n                  letterSpacing: \"0em\",\n                  textAlign: \"center\",\n                  color: theme.palette.secondary.main,\n                  whiteSpace: \"nowrap\",\n                }}>\n                Select your address for\n              </div>\n              <div\n                style={{\n                  fontFamily: \"Lato\",\n                  fontSize: \"8px\",\n                  fontWeight: 400,\n                  lineHeight: \"10px\",\n                  letterSpacing: \"0em\",\n                  textAlign: \"center\",\n                  color: theme.palette.secondary.main,\n                  whiteSpace: \"nowrap\",\n                }}>\n                hassle free shopping\n              </div>\n            </div> */}\n\n            {usrBaseInfo?.is_kalafex_admin ? null : (\n              <div className={classes.search}>\n                <InputBase\n                  placeholder='Try \"handmade mugs\"'\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{ \"aria-label\": \"search\" }}\n                  value={search}\n                  onChange={(e) => {\n                    setSearch(e.target.value);\n                  }}\n                />\n\n                <IconButton\n                  component={Link}\n                  onClick={\n                    search.length === 0 ? (e) => e.preventDefault() : null\n                  }\n                  to={`/search/${search}`}\n                  style={{\n                    // height: \"0.75rem\",\n                    // width: \"20px\",\n                    borderRadius: \"0 4px 4px 0\",\n                    background: theme.palette.secondary.main,\n                  }}>\n                  <SearchIcon\n                    style={{\n                      color: \"white\",\n                    }}\n                  />\n                </IconButton>\n                {/* <img\n                  style={{ position: \"absolute\", right: 0, cursor: \"pointer\" }}\n                  src={search}\n                  alt='search'\n                  height='100%'\n                /> */}\n              </div>\n            )}\n          </div>\n          {/* <div className={classes.grow} /> */}\n          {desktop}\n          <div className={classes.sectionMobile}>\n            <IconButton\n              edge='end'\n              className={classes.menuButton}\n              color='inherit'\n              aria-label='menu'\n              onClick={() => setDrawer(true)}>\n              <Menu />\n            </IconButton>\n            <Drawer\n              anchor='right'\n              open={drawer}\n              onClose={() => setDrawer(false)}>\n              <div\n                style={{ width: \"275px\" }}\n                role='presentation'\n                onClick={() => setDrawer(false)}\n                onKeyDown={() => setDrawer(false)}>\n                <List>\n                  <ListItem>\n                    <Link to='/'>\n                      <img\n                        height='50px'\n                        widht='81.71px'\n                        src={\n                          // md ?\n                          logoMain\n                          // : logoMainSm\n                        }\n                        alt='kalafax logo'\n                      />\n                    </Link>\n                  </ListItem>\n                  {!token ? (\n                    <>\n                      <ListItem component={Link} to='/login'>\n                        <LockOpenIcon\n                          style={{\n                            color: theme.palette.secondary.main,\n                            fontSize: \"20px\",\n                          }}\n                        />\n                        {\"  \"}\n                        <Typography variant='h5' style={{ color: \"#152238\" }}>\n                          Login/Signup\n                        </Typography>\n                      </ListItem>\n                    </>\n                  ) : null}\n                  {token ? (\n                    usrBaseInfo?.is_kalafex_admin ? null : (\n                      <ListItem button component={Link} to='/user/profile'>\n                        <PersonOutline\n                          style={{\n                            color: theme.palette.secondary.main,\n                            fontSize: \"20px\",\n                          }}\n                        />\n                        <Typography variant='h5'>Profile</Typography>\n                      </ListItem>\n                    )\n                  ) : null}\n                  {usrBaseInfo?.is_artist ? (\n                    <ListItem component={Link} to='/artist/dashboard'>\n                      <DashboardOutlinedIcon\n                        style={{\n                          color: theme.palette.secondary.main,\n                          fontSize: \"20px\",\n                        }}\n                      />\n                      {\"  \"}\n                      <Typography variant='h5' style={{ color: \"#152238\" }}>\n                        Dashboard\n                      </Typography>\n                    </ListItem>\n                  ) : null}\n                  {usrBaseInfo?.is_kalafex_admin ? null : (\n                    <ListItem component={Link} to='/cart'>\n                      <ShoppingCartOutlinedIcon\n                        style={{\n                          color: theme.palette.secondary.main,\n                          fontSize: \"20px\",\n                        }}\n                      />\n                      {\"  \"}\n                      <Typography variant='h5' style={{ color: \"#152238\" }}>\n                        Cart\n                      </Typography>\n                    </ListItem>\n                  )}\n                  {token ? (\n                    usrBaseInfo?.is_kalafex_admin ? (\n                      <ListItem\n                        component={Link}\n                        onClick={() => {\n                          logout(\n                            setLoading,\n                            setUsrBaseInfo,\n                            setToken,\n                            props.history,\n                          );\n                        }}>\n                        <ExitToAppIcon\n                          style={{\n                            color: theme.palette.secondary.main,\n                            fontSize: \"20px\",\n                          }}\n                        />\n                        {\"  \"}\n                        <Typography variant='h5' style={{ color: \"#152238\" }}>\n                          Logout\n                        </Typography>\n                      </ListItem>\n                    ) : (\n                      <>\n                        <ListItem button component={Link} to='/user/trackOrder'>\n                          <BallotOutlinedIcon\n                            style={{\n                              color: theme.palette.secondary.main,\n                              fontSize: \"20px\",\n                            }}\n                          />\n                          <Typography variant='h5'>Track My Order</Typography>\n                        </ListItem>\n                        <ListItem\n                          component={Link}\n                          onClick={() => {\n                            logout(\n                              setLoading,\n                              setUsrBaseInfo,\n                              setToken,\n                              props.history,\n                            );\n                          }}>\n                          <ExitToAppIcon\n                            style={{\n                              color: theme.palette.secondary.main,\n                              fontSize: \"20px\",\n                            }}\n                          />\n                          {\"  \"}\n                          <Typography variant='h5' style={{ color: \"#152238\" }}>\n                            Logout\n                          </Typography>\n                        </ListItem>\n                      </>\n                    )\n                  ) : null}\n                </List>\n\n                {usrBaseInfo?.is_kalafex_admin ? null : (\n                  <>\n                    <Divider style={{ height: \"10px\" }} />\n\n                    <List>\n                      <ListItem>\n                        <Typography variant='h4'>Popular Categories</Typography>\n                      </ListItem>\n\n                      <ListItem\n                        button\n                        component={Link}\n                        to='Paintings & Artwork'>\n                        <Typography variant='h6'>\n                          Paintings & Artwork\n                        </Typography>\n                      </ListItem>\n                      <ListItem button component={Link} to='Lifestyle & Home'>\n                        <Typography variant='h6'>Lifestyle & Home</Typography>\n                      </ListItem>\n                      <ListItem\n                        button\n                        component={Link}\n                        to='Jewellery & Accessories'>\n                        <Typography variant='h6'>\n                          Jewellery & Accessories\n                        </Typography>\n                      </ListItem>\n                      <ListItem button component={Link} to='Collectibles'>\n                        <Typography variant='h6'>Collectibles</Typography>\n                      </ListItem>\n                    </List>\n                    <Divider style={{ height: \"10px\" }} />\n                    <List>\n                      <ListItem button component={Link} to='about-us'>\n                        <Typography variant='h6'>About Us</Typography>\n                      </ListItem>\n                      <ListItem\n                        button\n                        component='a'\n                        href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/DISCLAIMER.pdf'\n                        target='_blank'>\n                        <Typography variant='h6'>Disclaimer</Typography>\n                      </ListItem>\n                      <ListItem\n                        button\n                        component='a'\n                        href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/Terms+of+Use.pdf'\n                        target='_blank'>\n                        <Typography variant='h6'>Terms of Use</Typography>\n                      </ListItem>\n                      <ListItem\n                        button\n                        component='a'\n                        href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/PRIVACY+NOTICE.pdf'\n                        target='_blank'>\n                        <Typography variant='h6'>Privacy</Typography>\n                      </ListItem>\n                      <ListItem\n                        button\n                        component='a'\n                        href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/RETURN+POLICY.pdf'\n                        target='_blank'>\n                        <Typography variant='h6'>Returns</Typography>\n                      </ListItem>\n                      <ListItem button component={Link} to='/contact'>\n                        <Typography variant='h6'>Contact Us</Typography>\n                      </ListItem>\n                    </List>\n                  </>\n                )}\n                <Divider style={{ height: \"10px\" }} />\n                <div\n                  style={{ display: \"flex\", marginLeft: theme.spacing(0.75) }}>\n                  <div className={classes.icon}>\n                    <a\n                      href='https://www.instagram.com/kalafex_/'\n                      rel='noreferrer'\n                      target='_blank'>\n                      <img\n                        width='31px'\n                        height='31px'\n                        src={instagram}\n                        alt='instagram icon'\n                      />\n                    </a>\n                  </div>\n                  <div className={classes.icon}>\n                    <a\n                      href='https://www.facebook.com/kalafex/'\n                      rel='noreferrer'\n                      target='_blank'>\n                      <img\n                        width='31px'\n                        height='31px'\n                        src={facebook}\n                        alt='facebook icon'\n                      />\n                    </a>\n                  </div>\n                  <div className={classes.icon}>\n                    <a\n                      href='https://twitter.com/kalafex_'\n                      rel='noreferrer'\n                      target='_blank'>\n                      <img\n                        width='31px'\n                        height='31px'\n                        src={twitter}\n                        alt='twitter icon'\n                      />\n                    </a>\n                  </div>\n\n                  <div className={classes.icon}>\n                    <a\n                      href='https://www.linkedin.com/company/kalafex/'\n                      rel='noreferrer'\n                      target='_blank'>\n                      <img\n                        width='31px'\n                        height='31px'\n                        src={linkedIn}\n                        alt='linkedIn icon'\n                      />\n                    </a>\n                  </div>\n                  {/* <div className={classes.icon}>\n              <img src={mail} alt='mail icon' />\n            </div> */}\n                </div>\n              </div>\n            </Drawer>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/SubHeader.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/Categories.js",["340"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Toolbar,\n  fade,\n  makeStyles,\n  Typography,\n  useTheme,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  category: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"0 1vw\",\n  },\n}));\n\nconst Categories = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const cat = [\n    {\n      value: \"Paintings & Artwork\",\n      url: \"search/Paintings & Artwork\",\n      // subCat: [\n      //   { value: \"Earrings\" },\n      //   { value: \"Necklaces\" },\n      //   { value: \"Jewellery\" },\n      // ],\n    },\n    {\n      value: \"Lifestyle & Home\",\n      url: \"search/Lifestyle & Home\",\n      // subCat: [{ value: \"Posters\" }, { value: \"Apparel \" }],\n    },\n    {\n      value: \"Jewellery & Accessories\",\n      url: \"search/Jewellery & Accessories\",\n      // subCat: [{ value: \"Canvas\" }, { value: \"Paper\" }],\n    },\n    {\n      value: \"Collectibles\",\n      url: \"search/Collectibles\",\n      // subCat: [{ value: \"Pottery\" }],\n    },\n    // {\n    //   value: \"Lifestyle\",\n    //   // subCat: [{ value: \"Coasters\" }],\n    // },\n  ].map((cate, key) => (\n    <div className={classes.category} key={key}>\n      <Button component={Link} to={`/${cate.url}`}>\n        <Typography\n          variant='h6'\n          color='secondary'\n          noWrap\n          style={{ fontWeight: \"600\" }}>\n          {cate.value}\n        </Typography>\n        {/* <ArrowDropDownSharpIcon style={{ color: theme.palette.secondary.main }} /> */}\n      </Button>\n    </div>\n  ));\n\n  return (\n    <AppBar\n      position='static'\n      style={{\n        boxShadow: \"none\",\n        borderBottom: `1px solid ${theme.palette.grey[300]}`,\n      }}>\n      <Toolbar style={{ minHeight: \"48px \", justifyContent: \"center\" }}>\n        {cat}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Categories;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Hero.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/PaysArtist.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Usp.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/TimelineComp.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Featured.js",["341","342","343","344"],"import React from \"react\";\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  useTheme,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst Categories = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  return <Grid container></Grid>;\n};\n\nexport default Categories;\n",["345","346"],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/Form2.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/Form3.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Signup.js",["347","348"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Logo from \"../ui/Logo\";\n\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  useTheme,\n  useMediaQuery,\n  Button,\n} from \"@material-ui/core\";\nimport signupBg from \"../assets/authImgs/signupBg.png\";\nimport signupBg2 from \"../assets/authImgs/signupBg2.png\";\nimport signupBg3 from \"../assets/authImgs/signupBg3.png\";\nimport TimelineComp from \"../components/Signup/TimelineComp\";\nimport Form1A from \"../components/Signup/Form1A\";\nimport Form2 from \"../components/Signup/Form2\";\nimport Form3 from \"../components/Signup/Form3\";\nimport loginTxt from \"../assets/authImgs/loginTxt.png\";\nimport { SignupProvider } from \"../Context/SignupContext\";\nimport registerNow from \"../assets/authImgs/registerNow.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  login: {\n    minHeight: \"100vh\",\n  },\n  left: {\n    padding: `${theme.spacing(4)}px 15px`,\n    position: \"relative\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: `${theme.spacing(4)}px 0 ${theme.spacing(4)}px 3.2%`,\n    },\n  },\n  right: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n}));\n\nconst SignupArtist = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const md = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const signupArtistHead = (\n    <Grid item>\n      <Typography\n        variant='h3'\n        component='div'\n        style={{\n          marginTop: \"8vh\",\n          marginBottom: theme.spacing(1),\n          fontWeight: 400,\n        }}\n        color='secondary'>\n        Sign up as Artist\n      </Typography>\n    </Grid>\n  );\n  const signupHead = (\n    <Grid item>\n      <Typography\n        variant='h3'\n        component='div'\n        style={{\n          marginTop: \"2vh\",\n          marginBottom: theme.spacing(1),\n          fontWeight: 400,\n        }}\n        color='secondary'>\n        Sign up\n      </Typography>\n    </Grid>\n  );\n\n  const [step, setStep] = useState(0);\n  if (localStorage.getItem(\"Token\")) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <SignupProvider>\n      <Grid\n        container\n        // disableGutters\n        className={classes.login}>\n        <Grid\n          container\n          md={6}\n          item\n          className={classes.left}\n          spacing={0}\n          style={{\n            backgroundBlendMode: \"lighten\",\n            // backgroundPosition: \"center\",\n            background: md\n              ? null\n              : step === 0\n              ? `rgba(255,255,255,0.6) url(${signupBg}) center center / cover no-repeat `\n              : step === 1\n              ? `rgba(255,255,255,0.6) url(${signupBg2}) center center / cover no-repeat`\n              : ` rgba(255,255,255,0.6) url(${signupBg3}) center center / cover no-repeat`,\n          }}>\n          <Grid item container direction='column' md={8}>\n            <Logo />\n            {step === 0 ? (\n              props.type === \"artist\" ? (\n                <>\n                  {signupArtistHead}\n                  <Form1A setStep={setStep} step={step} />\n                  <Typography\n                    variant='h6'\n                    style={{ fontWeight: 500, display: \"inline\" }}>\n                    Already have an account?\n                    <Link\n                      to='/login'\n                      style={{ fontWeight: 500, display: \"inline\" }}>\n                      <img\n                        style={{\n                          display: \"inline\",\n                          marginBottom: \"-3px\",\n                          marginLeft: \"6px\",\n                        }}\n                        src={loginTxt}\n                        alt='Signup Text'\n                      />\n                    </Link>\n                  </Typography>\n                </>\n              ) : (\n                <>\n                  {signupHead}\n                  <Form1A setStep={setStep} step={step} />\n                  <Typography\n                    variant='h6'\n                    style={{ fontWeight: 500, display: \"inline\" }}>\n                    Already have an account.\n                    <Link\n                      to='/login'\n                      style={{ fontWeight: 500, display: \"inline\" }}>\n                      <img\n                        style={{\n                          display: \"inline\",\n                          marginBottom: \"-3px\",\n                          marginLeft: \"6px\",\n                        }}\n                        src={loginTxt}\n                        alt='Signup Text'\n                      />\n                    </Link>\n                  </Typography>\n                  <div\n                    style={{\n                      border: \"1px solid #E1E1E1\",\n                      width: \"200px\",\n                      margin: theme.spacing(1.5, 0.5),\n                    }}></div>\n                  <Typography\n                    variant='h6'\n                    style={{ fontWeight: 500, display: \"inline\" }}>\n                    Want to sell your art?{\" \"}\n                    <Typography\n                      variant='h6'\n                      component={Link}\n                      to='/artist/signup'\n                      style={{ display: \"inline\", textDecoration: \"none\" }}>\n                      <span\n                        style={{\n                          background:\n                            \"-webkit-linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n                          WebkitBackgroundClip: \"text\",\n                          WebkitTextFillColor: \"transparent\",\n                        }}>\n                        Register here\n                      </span>\n                    </Typography>\n                  </Typography>\n                </>\n              )\n            ) : step === 1 ? (\n              props.type === \"artist\" ? (\n                <>\n                  {signupArtistHead}\n                  <Form3 setStep={setStep} step={step} type={props.type} />\n                </>\n              ) : (\n                <>\n                  {signupHead}\n                  <Form3 setStep={setStep} step={step} type={props.type} />\n                </>\n              )\n            ) : props.type === \"artist\" ? (\n              <>\n                {signupArtistHead}\n                <Form2 setStep={setStep} step={step} />\n              </>\n            ) : (\n              <>\n                {signupHead}\n                <Form2 setStep={setStep} step={step} />\n              </>\n            )}\n          </Grid>\n          {md ? (\n            <Grid container item md={4} alignItems='center'>\n              <Grid container justify='flex-end'>\n                <TimelineComp step={step} />\n              </Grid>\n            </Grid>\n          ) : null}\n        </Grid>\n        <Grid\n          container\n          item\n          md={6}\n          className={classes.right}\n          justify='center'\n          alignItems='center'\n          style={{\n            background:\n              step === 0\n                ? `url(${signupBg}) center center / cover no-repeat `\n                : step === 1\n                ? `url(${signupBg2}) center center / cover no-repeat`\n                : ` url(${signupBg3}) center center / cover no-repeat`,\n            // backgroundSize: \"cover\",\n          }}>\n          <div\n            style={{\n              display:\n                props.type === \"artist\" ? (step === 0 ? null : \"none\") : \"none\",\n            }}>\n            <Typography\n              variant='h5'\n              color='primary'\n              style={{ marginTop: theme.spacing(8) }}>\n              Be a part of the community{\" \"}\n            </Typography>\n            <Typography\n              variant='h5'\n              color='primary'\n              style={{ marginTop: theme.spacing(4) }}>\n              Get door-to-door delivery\n            </Typography>\n            <Typography\n              variant='h5'\n              color='primary'\n              style={{ marginTop: theme.spacing(4) }}>\n              Hassle-free earnings\n            </Typography>\n            <Typography\n              variant='h5'\n              color='primary'\n              style={{ marginTop: theme.spacing(4) }}>\n              Widen your outreach\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </SignupProvider>\n  );\n};\n\nexport default SignupArtist;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Signup/Form1A.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Footer.js",["349","350"],"import React from \"react\";\nimport {\n  fade,\n  makeStyles,\n  Typography,\n  useTheme,\n  InputBase,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport facebook from \"../assets/socialIcons/facebook.png\";\nimport instagram from \"../assets/socialIcons/instagram.png\";\nimport linkedIn from \"../assets/socialIcons/linkedIn.png\";\nimport twitter from \"../assets/socialIcons/twitter.png\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"#F6F6F6\",\n    padding: \"75px 15px\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"75px 3.2%\",\n    },\n  },\n  link: {\n    color: \" #232222\",\n    margin: theme.spacing(0, 0, 1, 0),\n    display: \"inline-block\",\n    textDecoration: \"none\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    border: `1px ${theme.palette.secondary.main} solid`,\n    display: \"flex\",\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(6),\n    width: \"100%\",\n    maxWidth: \"500px\",\n    boxSizing: \"border-box\",\n    padding: \"16px\",\n  },\n\n  inputRoot: {\n    width: \"100%\",\n  },\n  inputInput: {\n    ...theme.typography.caption,\n    color: theme.palette.secondary.main,\n    // vertical padding + font size from searchIcon\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    \"&::placeholder\": {\n      color: theme.palette.secondary.light,\n    },\n  },\n  icon: {\n    padding: theme.spacing(1.5, 2.5, 1, 0),\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  return (\n    <Grid container className={classes.root}>\n      <Grid container item xs={12} md={7} spacing={0} className={classes.left}>\n        <Grid item xs={5} sm={6} md={3} container direction='column'>\n          <Grid item>\n            <Typography\n              variant='h6'\n              color='secondary'\n              style={{ margin: theme.spacing(2, 0, 2, 0) }}>\n              Company\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/about-us'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              About Us\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component='a'\n              rel='noreferrer'\n              href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/DISCLAIMER.pdf'\n              target='_blank'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Disclaimer\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component='a'\n              rel='noreferrer'\n              href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/Terms+of+Use.pdf'\n              target='_blank'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Terms of Use\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component='a'\n              rel='noreferrer'\n              href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/PRIVACY+NOTICE.pdf'\n              target='_blank'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Privacy\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component='a'\n              rel='noreferrer'\n              href='https://kalafex-docs.s3.ap-south-1.amazonaws.com/RETURN+POLICY.pdf'\n              target='_blank'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Returns\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n            <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Newsletter\n            </Typography>\n          </Grid> */}\n        </Grid>\n        <Grid item xs={6} md={3} container direction='column'>\n          <Grid item>\n            <Typography\n              variant='h6'\n              color='secondary'\n              style={{ margin: theme.spacing(2, 0, 2, 0) }}>\n              Artists\n            </Typography>\n          </Grid>\n          <Grid item>\n            {/* <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Guidelines\n            </Typography> */}\n          </Grid>\n          <Grid item>\n            {/* <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              How to promote\n            </Typography> */}\n          </Grid>\n          <Grid item>\n            {/* <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Artist FAQs\n            </Typography> */}\n          </Grid>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/artist/signup'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Sell Your Art\n            </Typography>\n          </Grid>\n          <Grid item>\n            {/* <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Blog\n            </Typography> */}\n          </Grid>\n        </Grid>\n        <Grid item xs={5} sm={6} md={3} container direction='column'>\n          <Grid item>\n            <Typography\n              variant='h6'\n              color='secondary'\n              style={{ margin: theme.spacing(2, 0, 2, 0) }}>\n              Help\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n            <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              FAQ\n            </Typography>\n          </Grid> */}\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/contact'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Contact Us\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/user/trackOrder'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Track My Order\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n            <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Contact Us\n            </Typography>\n          </Grid> */}\n        </Grid>\n        <Grid item xs={6} md={3} container direction='column'>\n          <Grid item>\n            <Typography\n              variant='h6'\n              color='secondary'\n              style={{ margin: theme.spacing(2, 0, 2, 0) }}>\n              Shop\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/search/Paintings & Artwork'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Paintings & Artwork\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/search/Lifestyle & Home'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Lifestyle & Home\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/search/Jewellery & Accessories'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Jewellery & Accessories\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/search/Collectibles'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Collectibles\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n            <Typography\n              component='div'\n              variant='caption'\n              noWrap\n              className={classes.link}>\n              Explore more categories\n            </Typography>\n          </Grid> */}\n        </Grid>\n      </Grid>\n      <Grid md={1} item></Grid>\n      <Grid item container xs={12} md={4} className={classes.right}>\n        <Grid xs={12} item style={{ margin: theme.spacing(2, 0, 2, 0) }}>\n          {/* <Typography\n            variant='caption'\n            style={{ margin: theme.spacing(2, 0, 2, 0) }}>\n            Sign up to receive exclusive offers, decor tips and features about{\" \"}\n            <b>Kalafex artists.</b>\n          </Typography> */}\n          {/* <div className={classes.search} style={{ position: \"relative\" }}>\n            <InputBase\n              placeholder='Enter your email'\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n            <Button\n              style={{\n                position: \"absolute\",\n                width: \"120px\",\n                height: \"62px\",\n                right: \"0\",\n                top: \"0\",\n                borderRadius: \"0 5px 5px 0\",\n                background: \"#40567A\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}>\n              <Typography style={{ color: \"white\" }}>Subscribe</Typography>\n              \n            </Button>\n          </div> */}\n          <Typography variant='caption' color='secondary'>\n            Follow @Kalafex at\n          </Typography>\n          <div style={{ display: \"flex\" }}>\n            <div className={classes.icon}>\n              <a\n                href='https://www.instagram.com/kalafex_/'\n                rel='noreferrer'\n                target='_blank'>\n                <img\n                  width='31px'\n                  height='31px'\n                  src={instagram}\n                  alt='instagram icon'\n                />\n              </a>\n            </div>\n            <div className={classes.icon}>\n              <a\n                href='https://www.facebook.com/kalafex/'\n                rel='noreferrer'\n                target='_blank'>\n                <img\n                  width='31px'\n                  height='31px'\n                  src={facebook}\n                  alt='facebook icon'\n                />\n              </a>\n            </div>\n            <div className={classes.icon}>\n              <a\n                href='https://twitter.com/kalafex_'\n                rel='noreferrer'\n                target='_blank'>\n                <img\n                  width='31px'\n                  height='31px'\n                  src={twitter}\n                  alt='twitter icon'\n                />\n              </a>\n            </div>\n\n            <div className={classes.icon}>\n              <a\n                href='https://www.linkedin.com/company/kalafex/'\n                rel='noreferrer'\n                target='_blank'>\n                <img\n                  width='31px'\n                  height='31px'\n                  src={linkedIn}\n                  alt='linkedIn icon'\n                />\n              </a>\n            </div>\n            {/* <div className={classes.icon}>\n              <img src={mail} alt='mail icon' />\n            </div> */}\n          </div>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Landing/Trending.js",["351"],"import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport Product from \"../Product\";\nimport { UIContext } from \"../../Context/UIContext\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0px 15px\",\n    marginTop: \"100px\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"0px 3.2%\",\n    },\n  },\n}));\n\nconst Trending = () => {\n  const classes = useStyles();\n  const { trendingProducts, setTrendingProducts } = useContext(UIContext);\n  const res = [\"sdsd\", \"sdsd\", \"sdsd\", \"sdsd\"];\n  let trending = res.map((key, i) => <Product key={i} />);\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}store/view/product/popular/`,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        setTrendingProducts(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  trending = trendingProducts?.results.slice(0, 4).map((product, i) => {\n    return (\n      <Product\n        name={product.name}\n        img={product.display_image}\n        pid={product.pid}\n        artist={product.artist}\n        category={product.category}\n        subcategory={product.subcategory}\n        price={product.kalafex_price}\n        key={i}\n      />\n    );\n  });\n\n  return (\n    <>\n      <Grid container spacing={4} direction='column' className={classes.root}>\n        <Grid item container>\n          <Grid item>\n            <Typography variant='h5'>Trending Designs</Typography>\n          </Grid>\n          <div style={{ flexGrow: 1 }}></div>\n          <Grid item>\n            <Typography\n              component={Link}\n              to='/trending'\n              variant='h6'\n              color='secondary'>\n              View more\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item container alignItems='center' spacing={2}>\n          {trending}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Trending;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Product.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/SignupContext.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Post.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Loading.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/SignupDialog.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Logo.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ArtistProfile.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/Temp.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistProfile/Page1.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/APContext.js",["352","353"],"import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { UIContext } from \"./UIContext\";\nimport { patchArtistDetails } from \"../API/Patch\";\nimport { postArtistDetails } from \"../API/Post\";\n\nexport const APContext = createContext();\n\nexport const APProvider = (props) => {\n  const { setLoading, usrBaseInfo } = useContext(UIContext);\n\n  const [customURL, setCustomURL] = useState(\"\");\n  const [aadhar, setAadhar] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [PAN, setPAN] = useState(\"\");\n  const [payment, setPayment] = useState(\"\");\n  const [avatar, setAvatar] = useState({\n    decode: {},\n    encoded: null,\n  });\n\n  useEffect(() => {\n    // console.log(\"sss\");\n    // if (usrBaseInfo.is_first_login) {\n    //   console.log(\"sss\");\n    //   postArtistDetails(setLoading);\n    // }\n    if (!usrBaseInfo.is_first_login) {\n      patchArtistDetails(\n        {},\n        () => {},\n        null,\n        setLoading,\n        null,\n        setCustomURL,\n\n        setAadhar,\n        setGST,\n        setPAN,\n        setAvatar,\n      );\n    }\n    return () => {};\n  }, []);\n  useEffect(() => {\n    if (usrBaseInfo.is_first_login) {\n      postArtistDetails(setLoading, () => {\n        patchArtistDetails(\n          {},\n          null,\n          null,\n          setLoading,\n          null,\n          setCustomURL,\n          setAadhar,\n          setGST,\n          setPAN,\n          setAvatar,\n        );\n      });\n    }\n\n    // patchArtistDetails(\n    //   {},\n    //   null,\n    //   null,\n    //   setLoading,\n    //   null,\n    //   setCustomURL,\n    //   setAadhar,\n    //   setGST,\n    //   setPAN,\n    // );\n    return () => {};\n  }, [usrBaseInfo]);\n\n  return (\n    <APContext.Provider\n      value={{\n        customURL,\n        setCustomURL,\n        aadhar,\n        setAadhar,\n        GST,\n        setGST,\n        PAN,\n        setPAN,\n        payment,\n        setPayment,\n        avatar,\n        setAvatar,\n      }}>\n      {props.children}\n    </APContext.Provider>\n  );\n};\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistProfile/Page2.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistProfile/Page3.js",["354"],"import React, { useContext } from \"react\";\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  useTheme,\n  Button,\n  TextField,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { APContext } from \"../../Context/APContext\";\nimport { UIContext } from \"../../Context/UIContext\";\nimport { patchArtistDetails, patchUsrDetails } from \"../../API/Patch\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    width: \"200px\",\n    height: \"200px\",\n  },\n  input: {\n    width: \"500px\",\n    maxWidth: \"100%\",\n    marginTop: \"10vh\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"0\",\n    },\n  },\n}));\n\nconst Page3 = (props) => {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const md = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const {\n    aadhar,\n    setAadhar,\n    GST,\n    setGST,\n    PAN,\n    setPAN,\n    // payment,\n    // setPayment,\n  } = useContext(APContext);\n  const { setLoading, setSnackbar } = useContext(UIContext);\n  const handlePageChange = () => {\n    var data2 = JSON.stringify({ is_first_login: false });\n    patchUsrDetails(data2, setLoading, setSnackbar, history, false);\n    const data = {\n      aadhar_card_no: aadhar,\n      pan_card_no: PAN,\n      gst_no: GST,\n    };\n    patchArtistDetails(\n      data,\n      props.setPage,\n      props.page,\n      setLoading,\n      history,\n      () => {},\n      () => {},\n      () => {},\n      () => {},\n      () => {},\n    );\n  };\n  return (\n    <>\n      <Grid container item>\n        <Typography\n          variant='h5'\n          style={{ paddingTop: md ? theme.spacing(6) : theme.spacing(6) }}>\n          Let us start by setting up your shop.\n        </Typography>\n      </Grid>\n      <Grid item container justify='center'>\n        <form\n          style={{ width: \"100%\" }}\n          autoComplete='off'\n          onSubmit={handleSubmit(handlePageChange)}>\n          <Grid\n            item\n            container\n            justify='center'\n            spacing={md ? 4 : 4}\n            style={{\n              marginBottom: md ? theme.spacing(4) : theme.spacing(4),\n              marginTop: md ? theme.spacing(4) : theme.spacing(4),\n            }}>\n            <Grid container justify='center' item xs={12} md={6}>\n              <TextField\n                className={classes.input}\n                label='Aadhar card number'\n                name='aadhar'\n                variant='outlined'\n                color='secondary'\n                defaultValue={aadhar}\n                onChange={(e) => {\n                  setAadhar(e.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                placeholder='Enter your aadhar card number '\n                inputRef={register({\n                  required: \"Aadhar number is required\",\n                })}\n                error={Boolean(errors.aadhar)}\n                helperText={errors.aadhar?.message}\n              />\n            </Grid>\n            <Grid container justify='center' item xs={12} md={6}>\n              <TextField\n                className={classes.input}\n                label='GST number'\n                name='GST'\n                variant='outlined'\n                color='secondary'\n                defaultValue={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                placeholder='Enter your GST number'\n                inputRef={register({\n                  required: \"GST number is required\",\n                })}\n                error={Boolean(errors.GST)}\n                helperText={errors.GST?.message}\n              />\n            </Grid>\n            <Grid container justify='center' item xs={12} md={6}>\n              <TextField\n                className={classes.input}\n                label='PAN Card number'\n                name='PAN'\n                variant='outlined'\n                color='secondary'\n                defaultValue={PAN}\n                onChange={(e) => {\n                  setPAN(e.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                placeholder='Enter your PAN card number'\n                inputRef={register({\n                  required: \"PAN is required\",\n                })}\n                error={Boolean(errors.PAN)}\n                helperText={errors.PAN?.message}\n              />\n            </Grid>\n            {/* <Grid item xs={12} md={6} >\n            <TextField\n              className={classes.input}\n              label='Payment method'\n              name='payment'\n              variant='outlined'\n              color='secondary'\n              defaultValue={payment}\n              onChange={(e) => {\n                setPayment(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter your preferred payment method'\n              inputRef={register({\n                required: \"Payment method is required\",\n              })}\n              error={Boolean(errors.payment)}\n              helperText={errors.payment?.message}\n            />\n          </Grid> */}\n          </Grid>\n          <Grid\n            item\n            container\n            style={{}}\n            justify={md ? \"flex-end\" : \"space-between\"}>\n            <Button\n              // component={Link}\n              // to='artist/dashboard'\n              onClick={() => {\n                var data2 = JSON.stringify({ is_first_login: false });\n                patchUsrDetails(\n                  data2,\n                  setLoading,\n                  setSnackbar,\n                  history,\n                  \"/artist/dashboard\",\n                );\n              }}\n              style={{\n                padding: \"12px 80px\",\n                borderRadius: \"4px\",\n                background: theme.palette.grey[500],\n                marginTop: theme.spacing(2),\n              }}\n              variant='contained'\n              size='large'\n              color='secondary'\n              className={classes.loginButton}>\n              <Typography variant='h5'>Skip or now</Typography>\n            </Button>\n            <Button\n              style={{\n                padding: \"12px 80px\",\n                borderRadius: \"4px\",\n                background: theme.palette.secondary.light,\n                marginTop: theme.spacing(2),\n              }}\n              variant='contained'\n              size='large'\n              type='submit'\n              color='secondary'\n              className={classes.loginButton}>\n              <Typography variant='h5'>Save</Typography>\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </>\n  );\n};\n\nexport default Page3;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Get.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Notif.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Patch.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/UIContext.js",["355"],"import React, { createContext, useState, useEffect } from \"react\";\nimport { fetchBaseDetailsUser, fetchTrendingProducts } from \"../API/Get\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const UIContext = createContext();\n\nexport const UIProvider = (props) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [token, setToken] = useState(false);\n  const [snackbar, setSnackbar] = useState(false);\n  const [trendingProducts, setTrendingProducts] = useState(null);\n  const [search, setSearch] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [rePass, setRePass] = useState(\"\");\n  const [curPass, setCurPass] = useState(\"\");\n\n  const [usrBaseInfo, setUsrBaseInfo] = useState(\"\");\n  const [usrAdresses, setUsrAdresses] = useState(false);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"Token\")) {\n      setUsrBaseInfo(null);\n      return;\n    }\n    if (localStorage.getItem(\"Token\")) {\n      setToken(true);\n    }\n    if (token) {\n      fetchBaseDetailsUser(setUsrBaseInfo, setLoading, history, setSnackbar);\n    }\n    return () => {};\n  }, [token]);\n\n  useEffect(() => {\n    fetchTrendingProducts(null, setTrendingProducts, setLoading, setSnackbar);\n    return () => {};\n  }, []);\n\n  return (\n    <UIContext.Provider\n      value={{\n        loading,\n        setLoading,\n        token,\n        setToken,\n        snackbar,\n        setSnackbar,\n        trendingProducts,\n        setTrendingProducts,\n        usrBaseInfo,\n        setUsrBaseInfo,\n        pass,\n        setPass,\n        search,\n        setSearch,\n        rePass,\n        setRePass,\n        curPass,\n        setCurPass,\n        usrAdresses,\n        setUsrAdresses,\n      }}>\n      {props.children}\n    </UIContext.Provider>\n  );\n};\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ProductDetails.js",["356"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  useTheme,\n} from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { Avatar } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { UIContext } from \"../Context/UIContext\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { AddToCart } from \"../API/Post\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0px 15px\",\n    marginBottom: \"80px\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"0px 3.2%\",\n    },\n  },\n  smBanner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ProductDetails = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { pid } = useParams();\n  const { setLoading, setSnackbar, token } = useContext(UIContext);\n\n  const [productDetails, setProductDetails] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    setLoading(true);\n    var config = {\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}store/view/product/${pid}`,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setProductDetails(response.data);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    return () => {};\n  }, []);\n\n  const imgs = [productDetails?.display_image];\n  for (let i = 0; i < productDetails?.image_list.length; i++) {\n    imgs.push(productDetails?.image_list?.[i].image);\n  }\n\n  if (!productDetails) {\n    return <div style={{ height: \"100vh\" }}></div>;\n  }\n  console.log(productDetails);\n  return (\n    <>\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          backgroundColor: \"#F4F4F4\",\n        }}\n        className={classes.root}>\n        <Typography\n          variant='h6'\n          style={{\n            padding: theme.spacing(0.5, 0),\n          }}>\n          Home {\"> \"}\n          {productDetails?.category}\n        </Typography>\n      </Grid>\n      <Grid container className={classes.root} spacing={5}>\n        <Grid container item sm={4}>\n          <Grid item xs={12}>\n            <Carousel animation='slide'>\n              {imgs.map((img, i) => (\n                <Paper\n                  key={i}\n                  style={{\n                    width: \"100%\",\n                    aspectRatio: \"3/4\",\n\n                    margin: theme.spacing(1),\n                    background: `#ffffff url(\"${img}\")  no-repeat  center center `,\n                    backgroundSize: \"contain\",\n                  }}></Paper>\n              ))}\n            </Carousel>\n          </Grid>\n        </Grid>\n        <Grid container sm={8} item direction='column'>\n          <Grid container direction='row' item>\n            <IconButton\n              style={{\n                padding: \"0\",\n                height: \"60px\",\n                width: \"60px\",\n                marginRight: theme.spacing(1),\n              }}\n              onClick={() => {\n                history.push(`/artist/${productDetails?.artist?.custom_url}`);\n              }}>\n              <Avatar\n                // component={Button}\n                // to={`/artist/${productDetails?.artist?.custom_url}`}\n                src={productDetails?.artist?.profile_picture}\n                style={{\n                  width: \"60px\",\n                  height: \"60px\",\n                }}\n              />\n            </IconButton>\n            <Grid\n              item\n              style={{\n                paddingTop: theme.spacing(0.5),\n                marginBottom: theme.spacing(5),\n              }}>\n              <Typography variant='h5'>\n                {productDetails?.artist?.full_name}\n              </Typography>\n              <Typography variant='h6'>\n                {productDetails?.artist?.custom_url}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant='h3'>{productDetails?.name}</Typography>\n          </Grid>\n          <Grid item style={{ marginBottom: theme.spacing(3) }}>\n            <Typography variant='caption' style={{ color: \"#40567A\" }}>\n              {productDetails?.category}\n            </Typography>\n          </Grid>\n          <Grid\n            container\n            direction='column'\n            item\n            style={{ marginBottom: theme.spacing(3) }}>\n            {productDetails?.description?.split(\"\\n\")?.map((data, i) => (\n              <Grid container item key={i}>\n                <Typography\n                  component='div'\n                  variant='caption'\n                  style={{\n                    color: \"#263957\",\n                    width: \"100%\",\n                    minHeight: \"16px\",\n                  }}>\n                  {data}\n                </Typography>\n              </Grid>\n            ))}\n          </Grid>\n          <Grid\n            item\n            container\n            direction='row'\n            style={{ marginBottom: theme.spacing(3) }}>\n            <Typography variant='h4'>\n              ₹{productDetails?.kalafex_price}/-\n            </Typography>\n            {\"  \"}\n            <Typography\n              variant='caption'\n              style={{ marginTop: theme.spacing(0.5) }}>\n              including all taxes\n            </Typography>\n          </Grid>\n          {/* <Grid item style={{ marginBottom: theme.spacing(3) }}>\n            <Typography variant='subtitle2'>\n              Get you product delivered by 12th February 2021\n            </Typography>\n          </Grid> */}\n          <Grid item>\n            <Button\n              variant='contained'\n              onClick={() => {\n                if (!token) {\n                  history.push(\"/user/signup\");\n                  setSnackbar({\n                    value: true,\n                    message: \"Please signup to make a purchase\",\n                    type: \"info\",\n                  });\n                } else {\n                  AddToCart(\n                    { product: productDetails.pid, quantity: \"1\" },\n                    setLoading,\n                    setSnackbar,\n                  );\n                }\n              }}\n              style={{\n                ...theme.palette.background.gradient,\n                marginRight: theme.spacing(2.5),\n                marginBottom: theme.spacing(2),\n                padding: \"16px 24px\",\n                // background: \"white\",\n                color: \"white\",\n              }}>\n              <Typography variant='h5'>\n                Add to cart\n                <ShoppingCartOutlinedIcon\n                  style={{\n                    marginLeft: theme.spacing(2),\n                    color: \"white\",\n                    position: \"relative\",\n                    fontSize: \"20px\",\n                    top: \"4px\",\n                    // color: theme.palette.secondary.main,\n                  }}\n                />\n              </Typography>\n            </Button>\n            {/* <Button\n              onClick={() => {\n                if (!token) {\n                  history.push(\"/user/signup\");\n                  setSnackbar({\n                    value: true,\n                    message: \"Please signup to make a purchase\",\n                    type: \"info\",\n                  });\n                } else {\n                  // AddToCart(\n                  //   { product: productDetails.pid, quantity: \"1\" },\n                  //   setLoading,\n                  //   setSnackbar,\n                  // );\n                }\n              }}\n              variant='contained'\n              style={{\n                ...theme.palette.background.gradient,\n                marginBottom: theme.spacing(2),\n                padding: \"16px 32px\",\n                color: \"white\",\n              }}>\n              <Typography variant='h5'>Buy Now</Typography>\n            </Button> */}\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ProductDetails;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Navigation/HeaderIcons.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ArtistDashboard.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/DashboardCards.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/DashboardCard.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/ArtistDrawer.js",["357"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport ArtTrackIcon from \"@material-ui/icons/ArtTrack\";\nimport DirectionsBikeIcon from \"@material-ui/icons/DirectionsBike\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport theme from \"../../ui/Theme\";\n// import { Button } from \"@material-ui/core\";\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { ADashboardContext } from \"../../Context/ADashboardContext\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    // top: \"73px\",\n    backgroundColor: \"#40567A\",\n    minHeight: \"100vh\",\n\n    position: \"static\",\n  },\n  drawerPaperSM: {\n    backgroundColor: \"#40567A\",\n  },\n}));\n\nexport const ArtistDrawer = () => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant='permanent'\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor='left'>\n      <List style={{ color: \"white\" }}>\n        <ArtistDrawerIcons />\n      </List>\n      <Divider />\n    </Drawer>\n  );\n};\n\nexport const ArtistDrawerSM = () => {\n  const [drawer, setDrawer] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <>\n      <OpenInBrowserIcon\n        onClick={() => setDrawer(true)}\n        style={{\n          background: \"#40567A\",\n          color: \"white\",\n          position: \"fixed\",\n          bottom: \"-1px\",\n          padding: theme.spacing(0.5, 0),\n          fontSize: \"48px\",\n          left: \"15px\",\n          zIndex: \"1100\",\n          borderRadius: \"4px\",\n        }}\n      />\n      <Drawer\n        anchor='bottom'\n        open={drawer}\n        onClose={() => setDrawer(false)}\n        classes={{\n          paper: classes.drawerPaperSM,\n        }}>\n        <List style={{ color: \"white\" }}>\n          <ArtistDrawerIcons />\n        </List>\n        <Divider />\n      </Drawer>\n    </>\n  );\n};\n\nconst ArtistDrawerIcons = () => {\n  const { insights } = useContext(ADashboardContext);\n  // useEffect(() => {\n  //   setUrl(insights.name);\n  //   return () => {};\n  // }, []);\n  return (\n    <>\n      <ListItem button component={Link} to='/artist/dashboard/'>\n        <DashboardIcon\n          fontSize='large'\n          style={{\n            marginRight: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n          }}\n        />\n\n        <Typography> Dashboard</Typography>\n      </ListItem>\n      <ListItem button component={Link} to='/artist/dashboard/profile'>\n        <PersonIcon\n          fontSize='large'\n          style={{\n            marginRight: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n          }}\n        />\n\n        <Typography> MY Profile</Typography>\n      </ListItem>\n      <ListItem\n        button\n        component={Link}\n        to={`/artist/dashboard/${insights?.details?.custom_url}`}>\n        <ArtTrackIcon\n          fontSize='large'\n          style={{\n            marginRight: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n          }}\n        />\n\n        <Typography>My page</Typography>\n      </ListItem>\n      <ListItem button component={Link} to='/artist/dashboard/track'>\n        <DirectionsBikeIcon\n          fontSize='large'\n          style={{\n            marginRight: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n          }}\n        />\n\n        <Typography>Track products</Typography>\n      </ListItem>\n\n      {/* <ListItem button component={Link} to='/artist/dashboard/faq'>\n        <QuestionAnswerIcon\n          fontSize='large'\n          style={{\n            marginRight: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n          }}\n        />\n\n        <Typography>FAQs</Typography>\n      </ListItem> */}\n      <ListItem button component={Link} to='/artist/dashboard/help'>\n        <ContactSupportIcon\n          fontSize='large'\n          style={{\n            marginRight: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n          }}\n        />\n\n        <Typography>Need help?</Typography>\n      </ListItem>\n    </>\n  );\n};\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/TopListings.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/TopListing.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/ArtistDashboard/UploadProduct.js",["358"],"import { Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { ADashboardContext } from \"../../Context/ADashboardContext\";\nimport { addProduct } from \"../../API/Post\";\nimport { UIContext } from \"../../Context/UIContext\";\nimport DropZone from \"../../ui/DropZone\";\n\nconst useStyles = makeStyles((theme) => ({\n  inproot: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\n// const baseStyle = {\n//   flex: 1,\n//   display: \"flex\",\n//   flexDirection: \"column\",\n//   alignItems: \"center\",\n//   padding: \"20px\",\n//   border: \"2px solid red\",\n//   backgroundColor: \"#fafafa\",\n//   color: \"#bdbdbd\",\n//   outline: \"none\",\n//   transition: \"border .24s ease-in-out\",\n// };\n\n// const activeStyle = {\n//   borderColor: \"#2196f3\",\n// };\n\n// const acceptStyle = {\n//   borderColor: \"#00e676\",\n// };\n\n// const rejectStyle = {\n//   borderColor: \"#ff1744\",\n// };\n\nconst UploadProduct = () => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const { register, handleSubmit, errors } = useForm();\n  const { setLoading } = useContext(UIContext);\n  const sm = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  // const {\n  //   acceptedFiles,\n  //   getRootProps,\n  //   getInputProps,\n  //   isDragActive,\n  //   isDragAccept,\n  //   isDragReject,\n  // } = useDropzone();\n\n  // const files = acceptedFiles.map((file) => (\n  //   <li key={file.path}>\n  //     {file.path} - {file.size} bytes\n  //   </li>\n  // ));\n\n  const {\n    category,\n    setCategory,\n    name,\n    setName,\n    desc,\n    setDesc,\n    price,\n    setPrice,\n    quantity,\n    setQuantity,\n    img,\n  } = useContext(ADashboardContext);\n  const uploadClickHandler = () => {\n    var data = new FormData();\n    data.append(\"name\", name);\n    data.append(\"category\", category);\n    // data.append(\"subcategory\", \"mmm\");\n    data.append(\"description\", desc);\n    data.append(\"display_image\", img);\n    data.append(\"original_price\", price);\n    data.append(\"stock_left\", quantity);\n\n    addProduct(data, setLoading);\n  };\n\n  // const style = useMemo(\n  //   () => ({\n  //     ...baseStyle,\n  //     ...(isDragActive ? activeStyle : {}),\n  //     ...(isDragAccept ? acceptStyle : {}),\n  //     ...(isDragReject ? rejectStyle : {}),\n  //   }),\n  //   [isDragActive, isDragReject, isDragAccept],\n  // );\n  console.log(errors);\n  return (\n    <Grid item>\n      <Grid item xs={12} style={{ marginBottom: theme.spacing(3) }}>\n        <Typography variant='h6' color='secondary'>\n          Upload a Product\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <form\n          // className={classes.form}\n          style={{ width: \"100%\" }}\n          autoComplete='off'\n          onSubmit={handleSubmit(uploadClickHandler)}>\n          <Grid item xs={12}>\n            <Autocomplete\n              options={categoryList}\n              getOptionLabel={(option) => option.title}\n              onChange={(e, value) => {\n                setCategory(value?.title);\n              }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  style={{ marginTop: theme.spacing(0), width: \"100%\" }}\n                  label='Product Category'\n                  name='category'\n                  color='secondary'\n                  value={category}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  placeholder='Enter Product Category'\n                  // inputRef={register({\n                  //   required: \"Category is required\",\n                  // })}\n                  error={Boolean(errors.category)}\n                  helperText={errors.category?.message}\n                  variant='outlined'\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              style={{ marginTop: theme.spacing(3), width: \"100%\" }}\n              label='Product Name'\n              name='name'\n              color='secondary'\n              defaultValue={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter Product Name'\n              // inputRef={register({\n              //   required: \"Name is required\",\n              //   minLength: {\n              //     value: 40,\n              //     message: \"Please add a name longer than 40 characters \",\n              //   },\n              // })}\n              error={Boolean(errors.name)}\n              helperText={errors.name?.message}\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={12} style={{ marginTop: theme.spacing(3) }}>\n            <DropZone\n              name='dropzone'\n              // validate={register({\n              //   required: \"Name is required\",\n              // })}\n              // error={Boolean(errors.name)}\n              // helperText={errors.name?.message}\n            />\n            {/* <section\n            className='container'\n            style={{\n              // background: \"red\",\n              border: \"\",\n              borderRadius: \"6px\",\n              padding: theme.spacing(2),\n            }}>\n            <div {...getRootProps(style)}>\n              <input {...getInputProps()} />\n              <input {...getInputProps()} />\n\n              <Typography variant='h6'>\n                Drag 'n' drop the product imag here, or click to select files\n              </Typography>\n            </div>\n            <aside>\n              <Typography variant='h6'>Files</Typography>\n              <Typography variant='h6'>{files}</Typography>\n            </aside>\n          </section> */}\n            {/* <TextField\n            style={{ marginTop: theme.spacing(3), width: \"100%\" }}\n            label='Product Image'\n            name='img'\n            color='secondary'\n            variant='standard'\n            value={img}\n            type='file'\n            // inputProps={{ type: \"file\" }}\n            onChange={(e) => {\n              setImg(e.target.files[0]);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            placeholder='Enter Product Image'\n            inputRef={register({\n              required: \"Image is required\",\n            })}\n            error={Boolean(errors.name)}\n            helperText={errors.name?.message}\n          /> */}\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              style={{ marginTop: theme.spacing(3), width: \"100%\" }}\n              label='Product Description'\n              name='desc'\n              color='secondary'\n              defaultValue={desc}\n              onChange={(e) => {\n                setDesc(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter Product Description'\n              // inputRef={register({\n              //   required: \"Description is required\",\n              //   minLength: {\n              //     value: 200,\n              //     message: \"Please add a name longer than 200 characters \",\n              //   },\n              // })}\n              error={Boolean(errors.desc)}\n              helperText={errors.desc?.message}\n              variant='outlined'\n              multiline\n              rows={4}\n            />\n          </Grid>\n          <Grid container item xs={12} spacing={sm ? 1 : 0}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                style={{\n                  marginTop: theme.spacing(3),\n                  width: \"100%\",\n                }}\n                label='Your Price'\n                name='price'\n                color='secondary'\n                value={price}\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                placeholder='Enter Product Price'\n                // inputRef={register({\n                //   required: \"Price is required\",\n                // })}\n                error={Boolean(errors.price)}\n                helperText={errors.price?.message}\n                variant='outlined'\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                disabled\n                style={{ marginTop: theme.spacing(3), width: \"100%\" }}\n                label='Price'\n                name='kPrice'\n                color='secondary'\n                value={price * 1.05}\n                // InputLabelProps={{\n                //   shrink: true,\n                // }}\n                placeholder='Kalafex Price '\n                variant='outlined'\n              />\n            </Grid>\n          </Grid>\n          <Grid item container xs={12} spacing={1}>\n            <Grid item xs={6}>\n              <Autocomplete\n                getOptionSelected={(option, value) =>\n                  option.title === value.title\n                }\n                value={{ title: String(quantity) }}\n                options={quantityList}\n                getOptionLabel={(option) => option.title}\n                classes={{ inputRoot: classes.inproot }}\n                onChange={(e, value) => {\n                  setQuantity(value.title);\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    style={{ marginTop: theme.spacing(1), width: \"100%\" }}\n                    label='Quantity'\n                    name='quantity'\n                    color='secondary'\n                    value={quantity}\n                    // InputLabelProps={{\n                    //   shrink: true,\n                    // }}\n                    placeholder=''\n                    // inputRef={register({\n                    //   required: \"Quantity is required\",\n                    // })}\n                    error={Boolean(errors.quantity)}\n                    helperText={errors.quantity?.message}\n                    variant='filled'\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                // component={Link}\n                // to='/artist/signup'\n                variant='contained'\n                size='large'\n                color='secondary'\n                type='submit'\n                style={{\n                  ...theme.palette.background.gradient,\n                  width: \"100%\",\n                  marginTop: theme.spacing(1),\n                  padding: \"16px 24px\",\n                }}>\n                <Typography variant='h5'>Submit</Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst categoryList = [\n  { title: \"Paintings & Artwork\" },\n\n  { title: \"Lifestyle & Home\" },\n  { title: \"Clothing\" },\n  { title: \"Jewellery & Accessories\" },\n  { title: \"Collectibles\" },\n];\nconst quantityList = [];\n\nfor (let index = 1; index <= 100; index++) {\n  quantityList.push({ title: String(index) });\n}\n\nexport default UploadProduct;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/ADashboardContext.js",["359","360"],"import React, { createContext, useEffect, useContext, useState } from \"react\";\nimport { fetchArtistProducts, fetchArtistProfile } from \"../API/Get\";\nimport { UIContext } from \"./UIContext\";\n\nexport const ADashboardContext = createContext();\n\nexport const ADashboardProvider = (props) => {\n  const { setLoading, usrBaseInfo } = useContext(UIContext);\n  const [category, setCategory] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  const [topListings, setTopListings] = useState(\"\");\n  const [insights, setInsights] = useState(false);\n  const [img, setImg] = useState(false);\n  useEffect(() => {\n    if (usrBaseInfo) {\n      fetchArtistProducts(usrBaseInfo.id, setTopListings, setLoading);\n    }\n    return () => {};\n  }, [usrBaseInfo]);\n  useEffect(() => {\n    fetchArtistProfile(setInsights, setLoading);\n    return () => {};\n  }, []);\n  return (\n    <ADashboardContext.Provider\n      value={{\n        category,\n        setCategory,\n        name,\n        setName,\n        desc,\n        setDesc,\n        price,\n        setPrice,\n        quantity,\n        setQuantity,\n        topListings,\n        setTopListings,\n        img,\n        setImg,\n        insights,\n        setInsights,\n      }}>\n      {props.children}\n    </ADashboardContext.Provider>\n  );\n};\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Help.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/serviceWorkerRegistration.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Search.js",["361","362"],"import { Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { fetchSearch, fetchTrendingProducts } from \"../API/Get\";\nimport Products from \"../components/Products\";\nimport { UIContext } from \"../Context/UIContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0 15px\",\n    paddingBottom: theme.spacing(20),\n    marginTop: theme.spacing(4),\n    minHeight: \"100vh\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"0vh 3.2%\",\n      paddingBottom: theme.spacing(20),\n    },\n  },\n}));\n\nconst Search = (props) => {\n  const classes = useStyles();\n  const { page } = useParams();\n  console.log(page);\n\n  const { query } = useParams();\n  const [products, setProducts] = useState(null);\n  const theme = useTheme();\n  const history = useHistory();\n  const { setLoading, trendingProducts, setSnackbar } = useContext(UIContext);\n  const [trendingOnPage, setTrendingOnPage] = useState(null);\n  const [pagination, setPagination] = useState(page ? Number(page) : 1);\n\n  const handlePageChange = (event, value) => {\n    setPagination(value);\n\n    if (props.trending) {\n      if (value !== 1) {\n        history.push(`/trending/${value}`);\n      } else {\n        history.push(`/trending`);\n      }\n    }\n    if (!props.trending) {\n      if (value !== 1) {\n        history.push(`/search/${query}/${value}`);\n      } else {\n        history.push(`/search/${query}/`);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setPagination(page ? page : 1);\n    if (props.trending) {\n      if (page) {\n        fetchTrendingProducts(page, setTrendingOnPage, setLoading, setSnackbar);\n      }\n    }\n\n    return () => {};\n  }, [page]);\n\n  useEffect(() => {\n    if (!props.trending) {\n      fetchSearch(query, page, setProducts, setLoading);\n    }\n    return () => {};\n  }, [query, page]);\n\n  if (!products && !trendingProducts && !trendingOnPage) {\n    return <div style={{ height: \"80vh\" }}></div>;\n  }\n  return (\n    <Grid container className={classes.root}>\n      <Grid item>\n        <Typography variant='h3'>\n          {!props.trending ? query : \"Trending\"}\n        </Typography>\n      </Grid>\n      {products?.results?.length === 0 ||\n      trendingOnPage?.results?.length === 0 ? (\n        <div\n          style={{\n            minHeight: \"50vh\",\n            display: \"grid\",\n            placeItems: \"center\",\n            height: \"100%\",\n            width: \"100%\",\n          }}>\n          <Typography variant='h1' align='center' style={{ opacity: \"0.3\" }}>\n            No Items Found\n          </Typography>\n        </div>\n      ) : null}\n      <Grid container item spacing={2} style={{ padding: theme.spacing(2, 0) }}>\n        {props.trending ? (\n          !page ? (\n            <Products data={trendingProducts?.results} />\n          ) : trendingOnPage ? (\n            <Products data={trendingOnPage?.results} />\n          ) : null\n        ) : products ? (\n          <Products data={products?.results} />\n        ) : null}\n      </Grid>\n      <Grid container item xs={12} justify='center'>\n        <Pagination\n          style={{ marginTop: theme.spacing(4) }}\n          size='large'\n          count={10}\n          page={Number(pagination)}\n          onChange={handlePageChange}\n          variant='outlined'\n          shape='rounded'\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Search;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Verification.js",["363"],"import axios from \"axios\";\nimport React, { useContext, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { UIContext } from \"../Context/UIContext\";\n\nconst Verification = (props) => {\n  const history = useHistory();\n  const { setLoading, setSnackbar } = useContext(UIContext);\n  const { id, code } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    var data = JSON.stringify({\n      uid: id,\n      token: code,\n    });\n\n    var config = {\n      method: \"post\",\n      url: `${process.env.REACT_APP_URL}auth/users/activation/`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setLoading(false);\n        history.push(\"/login\");\n        // setSnackbar({\n        //   value: true,\n        //   message: \"Not verified please try again\",\n        //   type: \"green\",\n        // });\n      })\n      .catch(function (error) {\n        setSnackbar({\n          value: true,\n          message: \"Not verified please try again\",\n          type: \"red\",\n        });\n      });\n\n    return () => {};\n  }, []);\n  return <div></div>;\n};\n\nexport default Verification;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/AboutUs.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/DropZone.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ArtistPage.js",["364","365"],"import {\n  Avatar,\n  Grid,\n  makeStyles,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport bannerImg from \"../assets/bannerImg.png\";\nimport Products from \"../components/Products\";\nimport { UIContext } from \"../Context/UIContext\";\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    width: \"125px\",\n    height: \"125px\",\n    position: \"absolute\",\n    top: \"-50px\",\n    left: \"50px\",\n  },\n  root: {\n    padding: \"0 15px\",\n    paddingBottom: theme.spacing(20),\n    marginTop: theme.spacing(4),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"0vh 3.2%\",\n      paddingBottom: theme.spacing(20),\n    },\n  },\n}));\n\nconst ArtistPage = (props) => {\n  const classes = useStyles();\n  let { url } = useParams();\n  const theme = useTheme();\n  const { setLoading } = useContext(UIContext);\n\n  const [aData, setAData] = useState(false);\n  const [products, setProducts] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    var config = {\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}accounts/view_particular_artist/${url}/`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        setLoading(false);\n        console.log(response.data);\n        setAData(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    return () => {};\n  }, []);\n  useEffect(() => {\n    if (aData) {\n      var config = {\n        method: \"get\",\n        url: `${process.env.REACT_APP_URL}store/view/product/artist/${aData?.[0]?.user}/`,\n        headers: {},\n      };\n\n      axios(config)\n        .then(function (response) {\n          console.log(JSON.stringify(response.data));\n          setProducts(response.data);\n          setLoading(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    return () => {};\n  }, [aData]);\n  return (\n    <Grid\n      container\n      direction='column'\n      className={props.artist ? null : classes.root}>\n      <Grid\n        item\n        container\n        style={{\n          background: `url(${bannerImg}) center center / cover no-repeat `,\n        }}\n        xs={12}>\n        <div style={{ height: \"30vh\" }}></div>\n      </Grid>\n      <Grid container item style={{ position: \"relative\" }}>\n        <Avatar\n          alt='profile pic'\n          src={aData?.[0]?.profile_picture}\n          className={classes.large}\n        />\n        <Typography\n          variant='h3'\n          style={{ position: \"absolute\", left: \"200px\" }}>\n          {aData?.[0]?.full_name}\n        </Typography>\n      </Grid>\n      <Grid container spacing={2} style={{ marginTop: theme.spacing(16) }} item>\n        {products ? <Products data={products?.results} /> : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ArtistPage;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/components/Products.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/UnderConstruction.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/LoadingLazy.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/ScrollTop.js",["366"],"import { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction ScrollTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, []);\n\n  return null;\n}\n\nexport default withRouter(ScrollTop);\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/ProfileUpdate.js",["367"],"import {\n  Button,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect, useHistory } from \"react-router\";\nimport { fetchAddress } from \"../API/Get\";\nimport { patchUsrDetails } from \"../API/Patch\";\nimport { UIContext } from \"../Context/UIContext\";\nimport Address from \"../ui/Address\";\nimport NewAddress from \"../ui/NewAddress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0 15px\",\n    paddingBottom: theme.spacing(20),\n    marginTop: theme.spacing(4),\n    minHeight: \"100vh\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"0vh 3.2%\",\n      paddingBottom: theme.spacing(20),\n    },\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst ProfileUpdate = () => {\n  const history = useHistory();\n  const {\n    usrBaseInfo,\n    setUsrBaseInfo,\n    pass,\n    setPass,\n    rePass,\n    setRePass,\n    curPass,\n    setCurPass,\n    setLoading,\n    setSnackbar,\n    usrAdresses,\n    setUsrAdresses,\n  } = useContext(UIContext);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const {\n    register: register2,\n    handleSubmit: handleSubmit2,\n    errors: errors2,\n  } = useForm();\n  const { register, handleSubmit, errors } = useForm();\n\n  const handlePhoneChange = () => {\n    const data = { phone_number: usrBaseInfo.phone_number };\n    patchUsrDetails(data, setLoading, setSnackbar);\n  };\n  const handlePassChange = () => {\n    setLoading(true);\n    var data = {\n      new_password: curPass,\n      re_new_password: pass,\n      current_password: rePass,\n    };\n\n    var config = {\n      method: \"post\",\n      url: `${process.env.REACT_APP_URL}auth/users/set_password/`,\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"Token\")}`,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setLoading(false);\n        // console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        setLoading(false);\n        setSnackbar({\n          value: true,\n          message:\n            error.response.data.email?.[0] ||\n            error.response.data.password?.[0] ||\n            error.response.data.phone_number?.[0] ||\n            error.response.data.date_of_birth?.[0] ||\n            error.response.data.full_name?.[0],\n          type: \"error\",\n        });\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    if (!usrAdresses) {\n      fetchAddress(setLoading, setUsrAdresses);\n    }\n    return () => {};\n  }, []);\n\n  if (!localStorage.getItem(\"Token\")) {\n    return <Redirect to='/login' />;\n  }\n\n  return (\n    <Grid container item direction='column' className={classes.root}>\n      <Grid container xs={12} item justify='space-between'>\n        <Grid item>\n          <Typography\n            variant='h2'\n            style={{\n              fontWeight: \"bold\",\n              marginBottom: theme.spacing(0.5),\n              // color: \"#40567A\",\n            }}\n            color='secondary'>\n            {usrBaseInfo?.full_name}\n          </Typography>\n          <Typography\n            variant='h5'\n            style={{ marginBottom: theme.spacing(5), opacity: \"0.8\" }}\n            color='secondary'>\n            Email : {usrBaseInfo?.email}\n          </Typography>\n        </Grid>\n        {usrBaseInfo.is_artist ? null : (\n          <Grid item>\n            <Button\n              // component={Link}\n              // to='/artist/signup'\n              onClick={() => {\n                const data = { is_first_login: true, is_artist: true };\n                patchUsrDetails(\n                  data,\n                  setLoading,\n                  setSnackbar,\n                  history,\n                  false,\n                  true,\n                );\n              }}\n              variant='contained'\n              size='large'\n              color='secondary'\n              type='submit'\n              style={{\n                ...theme.palette.background.gradient,\n\n                marginTop: theme.spacing(1),\n                padding: \"1rem 1.5rem\",\n              }}>\n              <Typography variant='h5'>Become an artist</Typography>\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n      <Grid item>\n        <Typography\n          variant='h4'\n          style={{ marginBottom: theme.spacing(3) }}\n          color='secondary'>\n          Update phone\n        </Typography>\n      </Grid>\n      <form\n        style={{ width: \"100%\" }}\n        autoComplete='off'\n        onSubmit={handleSubmit2(handlePhoneChange)}>\n        <Grid container item spacing={2}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              type='tel'\n              className={classes.input}\n              label='Phone Number'\n              name='phone'\n              variant='outlined'\n              color='secondary'\n              defaultValue={usrBaseInfo.phone_number}\n              onChange={(e) => {\n                setUsrBaseInfo({\n                  ...usrBaseInfo,\n                  phone_number: e.target.value.trim(),\n                });\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter new Phone number'\n              inputRef={register2({\n                required: \"Phone Number is required\",\n                pattern: {\n                  value: /([+]?\\d{1,2}[.-\\s]?)?(\\d{3}[.-]?){2}\\d{4}/,\n                  message: \"Invalid Phone Number\",\n                },\n              })}\n              error={Boolean(errors2.phone)}\n              helperText={errors2.phone?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Button\n              style={{\n                marginBottom: theme.spacing(4),\n                padding: \"18px 80px\",\n                borderRadius: \"4px\",\n                background: theme.palette.secondary.light,\n              }}\n              variant='contained'\n              size='large'\n              type='submit'\n              color='secondary'\n              className={classes.loginButton}>\n              <Typography variant='h5'>Save</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Grid item>\n        <Typography\n          variant='h4'\n          style={{ marginBottom: theme.spacing(3) }}\n          color='secondary'>\n          Update password\n        </Typography>\n      </Grid>\n      <form\n        style={{ width: \"100%\" }}\n        autoComplete='off'\n        onSubmit={handleSubmit(handlePassChange)}>\n        <Grid container item spacing={2}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              type='password'\n              className={classes.input}\n              label='Current Password'\n              name='curpass'\n              variant='outlined'\n              color='secondary'\n              value={curPass}\n              onChange={(e) => {\n                setCurPass(e.target.value.trim());\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter your current password'\n              inputRef={register({\n                required: \"Current password is required\",\n              })}\n              error={Boolean(errors.curpass)}\n              helperText={errors.curpass?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              className={classes.input}\n              label='New password'\n              name='password'\n              type='password'\n              variant='outlined'\n              color='secondary'\n              defaultValue={pass}\n              onChange={(e) => {\n                setPass(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter password'\n              inputRef={register({ required: \"Please enter a password\" })}\n              error={Boolean(errors.password)}\n              helperText={errors.password?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              className={classes.input}\n              label='Re-Enter Password'\n              name='rePass'\n              type='password'\n              variant='outlined'\n              color='secondary'\n              defaultValue={rePass}\n              onChange={(e) => {\n                setRePass(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Re-enter password to confirm'\n              inputRef={register({\n                required: \"Please Re-enter your Password\",\n                validate: (rePass) =>\n                  pass !== rePass ? \"Password does not match\" : null,\n              })}\n              error={Boolean(errors.rePass)}\n              helperText={errors.rePass?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Button\n              style={{\n                marginBottom: theme.spacing(4),\n                padding: \"18px 80px\",\n                borderRadius: \"4px\",\n                background: theme.palette.secondary.light,\n              }}\n              variant='contained'\n              size='large'\n              type='submit'\n              color='secondary'\n              className={classes.loginButton}>\n              <Typography variant='h5'>Save</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Grid item>\n        <Typography\n          variant='h4'\n          style={{ marginBottom: theme.spacing(3) }}\n          color='secondary'>\n          Address\n        </Typography>\n      </Grid>\n      <Grid container item spacing={8}>\n        {usrAdresses\n          ? usrAdresses?.map((data, i) => {\n              return (\n                <Grid key={i} item xs={12} sm={6} md={4}>\n                  <Address\n                    name={usrBaseInfo?.full_name}\n                    id={data.a_id}\n                    city={data.city}\n                    pincode={data.pin_code}\n                    state={data.state}\n                    street={data.street}\n                    type={data.address_type}\n                  />\n                </Grid>\n              );\n            })\n          : null}\n\n        <Grid item xs={12} sm={6} md={4}>\n          <NewAddress />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProfileUpdate;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/Address.js",["368","369"],"import {\n  Button,\n  Grid,\n  IconButton,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { deleteAddress } from \"../API/Delete\";\nimport { UIContext } from \"../Context/UIContext\";\nimport { Link } from \"react-router-dom\";\nimport { createOrder } from \"../API/Post\";\nimport { OrderContext } from \"../Context/OrderContext\";\n\nconst Address = (props) => {\n  const theme = useTheme();\n  const { setLoading, setSnackbar } = useContext(UIContext);\n  const { order, setOrder } = useContext(OrderContext);\n\n  const handleCreateOrder = () => {\n    const data = { shipping_address: props.id };\n    createOrder(data, setLoading, setSnackbar, setOrder);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        minHeight: \"300px\",\n        border: \"dashed #40567A 1px\",\n        padding: theme.spacing(4),\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        position: \"relative\",\n      }}>\n      <IconButton\n        onClick={() => {\n          deleteAddress(props.id, setLoading);\n        }}\n        style={{\n          marginLeft: theme.spacing(2),\n          position: \"absolute\",\n          top: \"20px\",\n          right: \"20px\",\n        }}>\n        <DeleteIcon\n          style={{\n            color: theme.palette.error.main,\n          }}\n        />\n      </IconButton>\n      <Grid container direction='column'>\n        <Grid item>\n          <Typography variant='h3' style={{ marginBottom: theme.spacing(1) }}>\n            {props.name}\n          </Typography>\n        </Grid>\n        {props.type === \"Pickup\" ? (\n          <Grid item>\n            <Typography variant='h5'>Pickup From</Typography>\n          </Grid>\n        ) : (\n          <Grid item>\n            <Typography variant='h5'>Ship to</Typography>\n          </Grid>\n        )}\n        <Grid item>\n          <Typography variant='h5'>{props.street}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant='h5'>{props.city}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant='h5'>{props.state}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography style={{ marginBottom: theme.spacing(2) }} variant='h5'>\n            {props.pincode}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {props.select ? (\n            <Button\n              onClick={handleCreateOrder}\n              // component={Link}\n              // to='/selectAddress'\n              variant='contained'\n              size='large'\n              color='secondary'\n              type='submit'\n              style={{\n                // width: \"100%\",\n                marginTop: theme.spacing(1),\n                padding: \"16px 24px\",\n              }}>\n              <Typography variant='h5'>Deliver here</Typography>\n            </Button>\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Address;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/NewAddress.js",["370"],"import { Grid, Typography, useTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Page2 from \"../components/ArtistProfile/Page2\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"none !important\",\n    overflow: \"scroll\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: \"10px\",\n    maxWidth: \"80vw\",\n    overflow: \"scroll\",\n    maxHeight: \"80vh\",\n    \"&:focus-visible\": {\n      outline: \"none !important\",\n    },\n  },\n}));\n\nconst NewAddress = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const theme = useTheme();\n  return (\n    <>\n      <div\n        onClick={handleOpen}\n        style={{\n          display: \"grid\",\n          placeItems: \"center\",\n          minHeight: \"300px\",\n          border: \"dashed #40567A 1px\",\n          padding: theme.spacing(4),\n          width: \"100%\",\n          boxSizing: \"border-box\",\n          cursor: \"pointer\",\n\n          \"&:hover\": {\n            filter: \"brightness(200%)\",\n          },\n        }}>\n        <AddOutlinedIcon\n          style={{\n            color: \"#787777\",\n            fontSize: \"200px\",\n            \"&:hover\": {\n              filter: \"brightness(200%)\",\n            },\n          }}\n        />\n        <Typography variant='h5' style={{ color: \"#787777\" }}>\n          Add a new address\n        </Typography>\n      </div>\n      <Modal\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Page2 usr={true} type={\"Shipping\"} />\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n};\n\nexport default NewAddress;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Cart.js",["371","372","373","374"],"import {\n  Button,\n  Grid,\n  makeStyles,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router\";\nimport { OrderContext } from \"../Context/OrderContext\";\nimport { UIContext } from \"../Context/UIContext\";\nimport CartItem from \"../ui/CartItem\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: `${theme.spacing(6)}px 15px`,\n    minHeight: \"100vh\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: `${theme.spacing(6)}px 3.2%`,\n    },\n  },\n}));\n\nconst Cart = () => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const history = useHistory();\n  const { setLoading } = useContext(UIContext);\n  const { cartItem, selectedItems, setSelectedItems, setCartItem } = useContext(\n    OrderContext,\n  );\n\n  useEffect(() => {\n    setLoading(true);\n    var config = {\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}orders/view/cart/`,\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"Token\")}`,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setLoading(false);\n        setCartItem(response.data.results);\n        // console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    return () => {};\n  }, []);\n\n  useEffect(() => {\n    setSelectedItems(cartItem ? cartItem.map((data) => data.op_id) : []);\n    return () => {};\n  }, [cartItem]);\n\n  if (!localStorage.getItem(\"Token\")) {\n    return <Redirect to='/login' />;\n  }\n\n  return (\n    <Grid container direction='column' className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h4' style={{ marginBottom: theme.spacing(4) }}>\n          Your cart\n        </Typography>\n      </Grid>\n      {cartItem?.length === 0 ? (\n        <div\n          style={{\n            minHeight: \"50vh\",\n            display: \"grid\",\n            placeItems: \"center\",\n            height: \"100%\",\n            width: \"100%\",\n          }}>\n          <Typography variant='h1' align='center' style={{ opacity: \"0.3\" }}>\n            No Items Found\n          </Typography>\n        </div>\n      ) : null}\n      {cartItem.map((data, i) => {\n        return (\n          <Grid key={i} container item direction='row'>\n            <CartItem\n              id={data.op_id}\n              name={data.product.name}\n              pid={data.pid}\n              quantity={data.quantity}\n              category={data.product.category}\n              img={data.product.display_image}\n              price={data.product.kalafex_price}\n              stock={data.product.stock_left}\n            />\n          </Grid>\n        );\n      })}\n      {cartItem.length !== 0 ? (\n        <Grid container item>\n          <Grid item xs={2} md={1}></Grid>\n          <Grid item xs={10} md={11}>\n            <Button\n              disabled={!Boolean(selectedItems.length)}\n              component={Link}\n              to='/selectAddress'\n              variant='contained'\n              size='large'\n              color='secondary'\n              type='submit'\n              style={{\n                ...theme.palette.background.gradient,\n                width: \"100%\",\n                marginTop: theme.spacing(1),\n                padding: \"16px 24px\",\n              }}>\n              <Typography variant='h5'>Proceed to Checkout</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default Cart;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/API/Delete.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/CartItem.js",["375","376","377","378"],"import {\n  Avatar,\n  Card,\n  CardContent,\n  CardMedia,\n  Checkbox,\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { delCartItem } from \"../API/Delete\";\nimport { patchCartItem } from \"../API/Patch\";\nimport { OrderContext } from \"../Context/OrderContext\";\nimport { UIContext } from \"../Context/UIContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // maxWidth: 345,\n  },\n  media: {\n    aspectRatio: \"3/4\",\n    filter: \"drop-shadow(1.18902px 4.7561px 17.8354px rgba(58, 58, 58, 0.15))\",\n    // height: \"70%\",\n    backgroundSize: \"contain\",\n  },\n}));\n\nconst CartItem = (props) => {\n  const { setLoading, setSnackbar } = useContext(UIContext);\n  const [checked, setChecked] = useState(true);\n  const [cPrice, setCPrice] = useState(\"0.00\");\n  const classes = useStyles();\n  const theme = useTheme();\n  const [quantity, setQuantity] = useState(props.quantity);\n  const md = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const { selectedItems, setSelectedItems } = useContext(OrderContext);\n\n  useEffect(() => {\n    setCPrice(quantity * props.price);\n\n    return () => {};\n  }, [quantity, props.price]);\n\n  useEffect(() => {\n    let array = [...selectedItems];\n    var index = array.indexOf(props.id);\n\n    if (!checked) {\n      if (index !== -1) {\n        array.splice(index, 1);\n        setSelectedItems(array);\n      }\n\n      //   selectedItems.current.splice(selectedItems.current.indexOf(props.id), 1);\n      //   // console.log(Boolean(selectedItems.current.length));\n    }\n    if (checked) {\n      array.push(props.id);\n      setSelectedItems(array);\n      //   selectedItems.current.push(props.id);\n      //   // console.log(Boolean(selectedItems.current.length));\n    }\n    return () => {};\n  }, [checked]);\n\n  const handleQuantityChange = (value) => {\n    const data = { quantity: value?.title };\n\n    setQuantity(value?.title);\n    patchCartItem(data, props.id, setLoading, setSnackbar);\n  };\n  // console.log(Boolean(selectedItems.current.length));\n\n  const quantityList = [];\n\n  for (let index = 1; index <= props.stock; index++) {\n    quantityList.push({ title: String(index) });\n  }\n  return (\n    <>\n      <Grid container justify='center' alignItems='center' item xs={2} md={1}>\n        <Checkbox\n          checked={props.stock === 0 ? false : checked}\n          disabled={props.stock === 0}\n          onChange={() => setChecked(!checked)}\n          color='secondary'\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n      </Grid>\n      <Grid item xs={10} md={11}>\n        <Card\n          style={{\n            padding: theme.spacing(3),\n            borderRadius: \"0\",\n            boxShadow: \"2px 6px 20px rgba(58, 58, 58, 0.15)\",\n          }}>\n          <Grid container spacing={2}>\n            <Grid item md={3}>\n              <CardMedia\n                component='img'\n                loading='lazy'\n                height='auto'\n                width=' 100%'\n                className={classes.media}\n                image={props?.img}\n                title='Paella dish'\n              />\n            </Grid>\n            <Grid item md={8}>\n              <Grid item>\n                <CardContent style={{ padding: md ? null : \"0\" }}>\n                  <Typography\n                    variant='h4'\n                    style={{\n                      marginBottom: theme.spacing(1),\n                    }}>\n                    {props.name}\n                  </Typography>\n                  <Typography\n                    variant='h6'\n                    style={{\n                      marginBottom: theme.spacing(2),\n                      color: \"#40567A\",\n                    }}>\n                    {props.category}\n                  </Typography>\n\n                  <Typography\n                    onClick={() => {\n                      delCartItem(props.id, setLoading, setSnackbar);\n                    }}\n                    variant='h6'\n                    style={{\n                      cursor: \"pointer\",\n                      marginBottom: theme.spacing(2),\n                      color: theme.palette.error.main,\n                    }}>\n                    Delete\n                  </Typography>\n                  <Grid\n                    container\n                    item\n                    alignItems='center'\n                    style={{ marginBottom: theme.spacing(3) }}>\n                    <Autocomplete\n                      getOptionSelected={(option, value) =>\n                        option.title === value.title\n                      }\n                      value={{ title: String(quantity) }}\n                      style={{}}\n                      options={quantityList}\n                      getOptionLabel={(option) => option.title}\n                      classes={{ inputRoot: classes.inproot }}\n                      onChange={(e, value) => {\n                        handleQuantityChange(value);\n                      }}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          style={{\n                            marginTop: theme.spacing(1),\n                            width: \"160px\",\n                          }}\n                          label='Quantity'\n                          name='quantity'\n                          color='secondary'\n                          InputLabelProps={{\n                            shrink: true,\n                          }}\n                          placeholder=''\n                          // inputRef={register({\n                          //   required: \"Quantity is required\",\n                          // })}\n                          // error={Boolean(errors.quantity)}\n                          // helperText={errors.quantity?.message}\n                          variant='filled'\n                        />\n                      )}\n                    />\n                    <Grid item xs={12} md={6}>\n                      <Typography\n                        variant='h2'\n                        style={{\n                          fontWeight: \"bold\",\n                          marginLeft: md ? theme.spacing(2) : null,\n                          marginTop: theme.spacing(1),\n                        }}>\n                        ₹ {cPrice}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  {/* <Grid container direction='row' item>\n                    <IconButton\n                      style={{\n                        padding: \"0\",\n                        height: \"60px\",\n                        width: \"60px\",\n                        marginRight: theme.spacing(1),\n                      }}\n                      // onClick={() => {\n                      //   history.push(\n                      //     `/artist/${productDetails?.artist?.custom_url}`,\n                      //   );\n                      // }}\n                    >\n                      <Avatar\n                        // component={Button}\n                        // to={`/artist/${productDetails?.artist?.custom_url}`}\n                        // src={productDetails?.artist?.profile_picture}\n                        style={{\n                          width: \"60px\",\n                          height: \"60px\",\n                        }}\n                      />\n                    </IconButton>\n                    <Grid\n                      item\n                      style={{\n                        paddingTop: theme.spacing(0.5),\n                        marginBottom: theme.spacing(5),\n                      }}>\n                      <Typography variant='h5'>\n                        {productDetails?.artist?.full_name}\n                      </Typography>\n                      <Typography variant='h6'>\n                        {productDetails?.artist?.custom_url}\n                      </Typography>\n                    </Grid>\n                  </Grid> */}\n                </CardContent>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Card>\n      </Grid>\n    </>\n  );\n};\n\nexport default CartItem;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/SelectAddress.js",["379","380","381","382"],"import {\n  Button,\n  Grid,\n  makeStyles,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Redirect, useHistory } from \"react-router\";\nimport { fetchAddress } from \"../API/Get\";\nimport { OrderContext } from \"../Context/OrderContext\";\nimport { UIContext } from \"../Context/UIContext\";\nimport Address from \"../ui/Address\";\nimport NewAddress from \"../ui/NewAddress\";\nimport { Link } from \"react-router-dom\";\nimport { createRazorpayPayment } from \"../API/Post\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: `${theme.spacing(6)}px 15px`,\n    [theme.breakpoints.up(\"md\")]: {\n      padding: `${theme.spacing(6)}px 3.2%`,\n    },\n  },\n}));\n\nconst SelectAddress = (props) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const history = useHistory();\n  const { setLoading, usrAdresses, setUsrAdresses, usrBaseInfo } = useContext(\n    UIContext,\n  );\n  const {\n    selectedItems,\n    setSelectedItems,\n    lastProductAdded,\n    setLastProductAdded,\n    order,\n    razorPay,\n    setRazorPay,\n  } = useContext(OrderContext);\n\n  useEffect(() => {\n    if (!usrAdresses) {\n      fetchAddress(setLoading, setUsrAdresses);\n    }\n    return () => {\n      setLastProductAdded(false);\n    };\n  }, []);\n\n  if (selectedItems.length === 0) {\n    return <Redirect to='/cart' />;\n  }\n  console.log(order);\n\n  return (\n    <Grid container direction='column' className={classes.root}>\n      <Grid item xs={12}>\n        <Typography variant='h3' style={{ marginBottom: theme.spacing(4) }}>\n          Select a delivery address\n        </Typography>\n      </Grid>\n\n      <Grid container item spacing={8}>\n        {usrAdresses\n          ? usrAdresses?.map((data, i) => {\n              return (\n                <Grid key={i} item xs={12} sm={6} md={4}>\n                  <Address\n                    select={true}\n                    name={usrBaseInfo?.full_name}\n                    id={data.a_id}\n                    city={data.city}\n                    pincode={data.pin_code}\n                    state={data.state}\n                    street={data.street}\n                  />\n                </Grid>\n              );\n            })\n          : null}\n\n        <Grid item xs={12} sm={6} md={4}>\n          <NewAddress />\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Button\n          disabled={!lastProductAdded}\n          // component={Link}\n          // to='/'\n          onClick={() => {\n            const data = { order: order.details.o_id };\n            createRazorpayPayment(data, setLoading, setRazorPay, history);\n          }}\n          variant='contained'\n          size='large'\n          color='secondary'\n          type='submit'\n          style={{\n            ...theme.palette.background.gradient,\n            width: \"100%\",\n            marginTop: theme.spacing(5),\n            padding: \"16px 24px\",\n          }}>\n          <Typography variant='h5'>Proceed to Payment</Typography>\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SelectAddress;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/Context/OrderContext.js",["383","384","385","386","387"],"import axios from \"axios\";\nimport React, {\n  createContext,\n  useEffect,\n  useContext,\n  useState,\n  useRef,\n} from \"react\";\nimport { useHistory } from \"react-router\";\nimport { fetchOrderDetailsFinally } from \"../API/Get\";\nimport { patchOrderProductToOrder } from \"../API/Patch\";\nimport { UIContext } from \"./UIContext\";\n\nexport const OrderContext = createContext();\n\nexport const OrderProvider = (props) => {\n  // const selectedItems = useRef([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [cartItem, setCartItem] = useState([]);\n  const [order, setOrder] = useState(false);\n  const history = useHistory();\n  const { setLoading, setSnackbar } = useContext(UIContext);\n  const [lastProductAdded, setLastProductAdded] = useState(false);\n  const [razorPay, setRazorPay] = useState(\"\");\n\n  useEffect(() => {\n    if (order) {\n      let data;\n      for (let i = 0; i < selectedItems.length; i++) {\n        data = { order: order.details.o_id };\n        console.log(data);\n        patchOrderProductToOrder(\n          data,\n          selectedItems[i],\n          setLoading,\n          setSnackbar,\n          i === selectedItems.length - 1 ? setLastProductAdded : () => {},\n        );\n      }\n    }\n    return () => {};\n  }, [order]);\n\n  // useEffect(() => {\n  //   if (lastProductAdded) {\n  //     console.log(order);\n  //     fetchOrderDetailsFinally(order.details.o_id, setLoading);\n  //   }\n  //   return () => {};\n  // }, [lastProductAdded]);\n\n  return (\n    <OrderContext.Provider\n      value={{\n        cartItem,\n        setCartItem,\n        selectedItems,\n        setSelectedItems,\n        order,\n        setOrder,\n        lastProductAdded,\n        setLastProductAdded,\n        razorPay,\n        setRazorPay,\n      }}>\n      {props.children}\n    </OrderContext.Provider>\n  );\n};\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/AllOrders.js",["388","389","390","391"],"import { Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router\";\nimport OrderItem from \"../ui/OrderItem\";\nimport { UIContext } from \"../Context/UIContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: `${theme.spacing(6)}px 15px`,\n    minHeight: \"100vh\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: `${theme.spacing(6)}px 3.2%`,\n    },\n  },\n}));\n\nconst AllOrders = (props) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const history = useHistory();\n  const [orders, setOrders] = useState(false);\n  const { setLoading, usrBaseInfo, token } = useContext(UIContext);\n\n  useEffect(() => {\n    setLoading(true);\n    var config = {\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL}${\n        props.admin\n          ? \"orders/view/orders/pending/\"\n          : \"orders/view/previous_orders/\"\n      }`,\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"Token\")}`,\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setLoading(false);\n        setOrders(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    return () => {};\n  }, []);\n\n  console.log(orders);\n  console.log(\n    orders?.results?.filter((data) => {\n      return data?.payment?.paid_successfully;\n    }),\n  );\n  // if (!token) {\n  //   return <Redirect to='/' />;\n  // }\n\n  // if (!usrBaseInfo?.is_kalafex_admin && token) {\n  //   return <Redirect to='/' />;\n  // }\n  return (\n    <Grid container className={classes.root} direction='column'>\n      <Grid item>\n        <Typography variant='h3' style={{ marginBottom: theme.spacing(3) }}>\n          {\" \"}\n          {usrBaseInfo?.is_kalafex_admin ? \"All\" : \"Your\"} Orders\n        </Typography>\n      </Grid>\n      <Grid container item>\n        {orders?.results\n          ?.filter((data) => {\n            return data?.payment?.paid_successfully;\n          })\n          .map((data, i) => (\n            <OrderItem\n              key={i}\n              id={data.o_id}\n              beingDelivered={data.being_delivered}\n              orderedDate={data.ordered_date}\n              price={data.payment.amount}\n              refundRequested={data.payment.refund_requested}\n              refundGranted={data.payment.refund_granted}\n              prods={data.orderproduct_set}\n            />\n          ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AllOrders;\n","/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/SuccessOrder.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/Admin.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/pages/AOrders.js",[],"/Users/shashwatgupta/Desktop/react projects/kalafax/src/ui/OrderItem.js",["392","393","394"],"import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Card,\n  CardMedia,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { fetchOrderDetailsFinally } from \"../API/Get\";\nimport orderProcessing from \"../assets/orderProcessing.png\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    aspectRatio: \"3/4\",\n    filter: \"drop-shadow(1.18902px 4.7561px 17.8354px rgba(58, 58, 58, 0.15))\",\n    backgroundSize: \"contain\",\n  },\n  icon: {\n    position: \"absolute\",\n    top: \"0px\",\n    right: \"10px\",\n  },\n}));\n\nconst OrderItem = (props) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const [expand, setExpand] = useState(false);\n  const md = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const handleChange = () => {\n    setExpand(!expand);\n  };\n\n  console.log(props.prods);\n\n  return (\n    // <Grid item container style={{ margin: theme.spacing(2) }}>\n    <Accordion\n      expanded={expand}\n      onChange={handleChange}\n      style={{ padding: theme.spacing(md ? 2 : 0), width: \"100%\" }}>\n      <AccordionSummary\n        classes={{ expandIcon: classes.icon }}\n        expandIcon={<ExpandMoreIcon />}>\n        <Grid container direction='row' spacing={2}>\n          <Grid\n            container\n            justify='center'\n            alignItems='center'\n            item\n            xs={12}\n            md={2}>\n            <LocalMallIcon style={{ fontSize: \"100px\" }} />\n          </Grid>\n          <Grid container item md={10}>\n            <Grid container item xs={12} spacing={1}>\n              <Grid item xs={12} md={4}>\n                <Typography variant='h6' align={md ? \"center\" : \"left\"}>\n                  Order number\n                </Typography>\n                <Typography variant='h6' align={md ? \"center\" : \"left\"}>\n                  {props.id}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Typography variant='h6' align={md ? \"center\" : \"left\"}>\n                  Status\n                </Typography>\n                <Typography\n                  variant='h6'\n                  align={md ? \"center\" : \"left\"}\n                  style={{\n                    // fontSize: 20,\n                    background: props.beingDelivered\n                      ? \"-webkit-linear-gradient(90.04deg, #FFB800 0%, #FF4185 99.67%\"\n                      : \"#6FCF97\",\n                    WebkitBackgroundClip: \"text\",\n                    WebkitTextFillColor: \"transparent\",\n                  }}>\n                  {props.beingDelivered ? \"Order processing\" : \"Delivered\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Typography variant='h6' align={md ? \"center\" : \"left\"}>\n                  Total Cost\n                </Typography>\n                <Typography variant='h6' align={md ? \"center\" : \"left\"}>\n                  ₹ {props.price}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container justify='flex-end'>\n              <Button\n                // component={Link}\n                // to='/artist/signup'\n                variant='contained'\n                color='primary'\n                type='submit'\n                style={{\n                  marginTop: theme.spacing(2),\n                  color: theme.palette.error.main,\n                }}>\n                <Typography variant='h5'>Request refund</Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container direction='column' spacing={2}>\n          {props?.prods?.map((data, i) => {\n            console.log(data);\n            return (\n              <Grid container key={i} item xs={12}>\n                <Card\n                  style={{\n                    width: \"100%\",\n                    padding: theme.spacing(2),\n                    borderRadius: \"0\",\n                    boxShadow: \"2px 6px 20px rgba(58, 58, 58, 0.15)\",\n                  }}>\n                  <Grid container spacing={2}>\n                    <Grid item md={2}>\n                      <CardMedia\n                        component='img'\n                        loading='lazy'\n                        height='auto'\n                        width=' 100%'\n                        className={classes.media}\n                        image={data.product.display_image}\n                        title='Paella dish'\n                      />\n                    </Grid>\n                    <Grid item md={6}>\n                      <Grid item xs={12}>\n                        <Typography\n                          variant='h3'\n                          style={{ marginBottom: theme.spacing(3) }}>\n                          {data.product.name}\n                        </Typography>\n                      </Grid>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12} md={4}>\n                          <Typography\n                            variant='h6'\n                            align={md ? \"center\" : \"left\"}\n                            style={{ color: theme.palette.secondary.light }}>\n                            {data.product.category}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <Typography\n                            variant='h6'\n                            align={md ? \"center\" : \"left\"}>\n                            Quantity\n                          </Typography>\n                          <Typography\n                            variant='h6'\n                            align={md ? \"center\" : \"left\"}>\n                            {data.quantity}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                          <Typography\n                            variant='h6'\n                            align={md ? \"center\" : \"left\"}>\n                            Price\n                          </Typography>\n                          <Typography\n                            variant='h6'\n                            align={md ? \"center\" : \"left\"}>\n                            {data.product.kalafex_price}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item container md={4}>\n                      {\" \"}\n                      <Button\n                        component={Link}\n                        to={`/product/${data.product.pid}`}\n                        variant='contained'\n                        size='large'\n                        color='secondary'\n                        type='submit'\n                        style={{\n                          width: \"100%\",\n                          marginTop: theme.spacing(1),\n                          padding: \"16px 24px\",\n                        }}>\n                        <Typography variant='h5'>Go to product page</Typography>\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n    // </Grid>\n  );\n};\n\nexport default OrderItem;\n",{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","severity":1,"message":"400","line":15,"column":8,"nodeType":"401","messageId":"402","endLine":15,"endColumn":25},{"ruleId":"399","severity":1,"message":"403","line":22,"column":8,"nodeType":"401","messageId":"402","endLine":22,"endColumn":15},{"ruleId":"399","severity":1,"message":"404","line":157,"column":17,"nodeType":"401","messageId":"402","endLine":157,"endColumn":24},{"ruleId":"399","severity":1,"message":"405","line":7,"column":10,"nodeType":"401","messageId":"402","endLine":7,"endColumn":25},{"ruleId":"395","replacedBy":"406"},{"ruleId":"397","replacedBy":"407"},{"ruleId":"399","severity":1,"message":"408","line":23,"column":28,"nodeType":"401","messageId":"402","endLine":23,"endColumn":41},{"ruleId":"399","severity":1,"message":"409","line":7,"column":3,"nodeType":"401","messageId":"402","endLine":7,"endColumn":7},{"ruleId":"399","severity":1,"message":"410","line":5,"column":3,"nodeType":"401","messageId":"402","endLine":5,"endColumn":13},{"ruleId":"399","severity":1,"message":"411","line":7,"column":3,"nodeType":"401","messageId":"402","endLine":7,"endColumn":9},{"ruleId":"399","severity":1,"message":"412","line":13,"column":9,"nodeType":"401","messageId":"402","endLine":13,"endColumn":16},{"ruleId":"399","severity":1,"message":"413","line":14,"column":9,"nodeType":"401","messageId":"402","endLine":14,"endColumn":14},{"ruleId":"395","replacedBy":"414"},{"ruleId":"397","replacedBy":"415"},{"ruleId":"399","severity":1,"message":"411","line":11,"column":3,"nodeType":"401","messageId":"402","endLine":11,"endColumn":9},{"ruleId":"399","severity":1,"message":"416","line":22,"column":8,"nodeType":"401","messageId":"402","endLine":22,"endColumn":19},{"ruleId":"399","severity":1,"message":"417","line":7,"column":3,"nodeType":"401","messageId":"402","endLine":7,"endColumn":12},{"ruleId":"399","severity":1,"message":"411","line":9,"column":3,"nodeType":"401","messageId":"402","endLine":9,"endColumn":9},{"ruleId":"418","severity":1,"message":"419","line":38,"column":6,"nodeType":"420","endLine":38,"endColumn":8,"suggestions":"421"},{"ruleId":"418","severity":1,"message":"422","line":43,"column":6,"nodeType":"420","endLine":43,"endColumn":8,"suggestions":"423"},{"ruleId":"418","severity":1,"message":"424","line":74,"column":6,"nodeType":"420","endLine":74,"endColumn":19,"suggestions":"425"},{"ruleId":"399","severity":1,"message":"426","line":16,"column":10,"nodeType":"401","messageId":"402","endLine":16,"endColumn":14},{"ruleId":"418","severity":1,"message":"427","line":33,"column":6,"nodeType":"420","endLine":33,"endColumn":13,"suggestions":"428"},{"ruleId":"418","severity":1,"message":"429","line":58,"column":6,"nodeType":"420","endLine":58,"endColumn":8,"suggestions":"430"},{"ruleId":"399","severity":1,"message":"431","line":12,"column":8,"nodeType":"401","messageId":"402","endLine":12,"endColumn":26},{"ruleId":"399","severity":1,"message":"432","line":48,"column":11,"nodeType":"401","messageId":"402","endLine":48,"endColumn":19},{"ruleId":"418","severity":1,"message":"424","line":22,"column":6,"nodeType":"420","endLine":22,"endColumn":19,"suggestions":"433"},{"ruleId":"418","severity":1,"message":"424","line":26,"column":6,"nodeType":"420","endLine":26,"endColumn":8,"suggestions":"434"},{"ruleId":"418","severity":1,"message":"435","line":63,"column":6,"nodeType":"420","endLine":63,"endColumn":12,"suggestions":"436"},{"ruleId":"418","severity":1,"message":"437","line":70,"column":6,"nodeType":"420","endLine":70,"endColumn":19,"suggestions":"438"},{"ruleId":"418","severity":1,"message":"439","line":45,"column":6,"nodeType":"420","endLine":45,"endColumn":8,"suggestions":"440"},{"ruleId":"418","severity":1,"message":"441","line":61,"column":6,"nodeType":"420","endLine":61,"endColumn":8,"suggestions":"442"},{"ruleId":"418","severity":1,"message":"424","line":81,"column":6,"nodeType":"420","endLine":81,"endColumn":13,"suggestions":"443"},{"ruleId":"418","severity":1,"message":"427","line":12,"column":6,"nodeType":"420","endLine":12,"endColumn":8,"suggestions":"444"},{"ruleId":"418","severity":1,"message":"445","line":109,"column":6,"nodeType":"420","endLine":109,"endColumn":8,"suggestions":"446"},{"ruleId":"399","severity":1,"message":"426","line":12,"column":10,"nodeType":"401","messageId":"402","endLine":12,"endColumn":14},{"ruleId":"399","severity":1,"message":"447","line":19,"column":11,"nodeType":"401","messageId":"402","endLine":19,"endColumn":16},{"ruleId":"399","severity":1,"message":"448","line":1,"column":10,"nodeType":"401","messageId":"402","endLine":1,"endColumn":14},{"ruleId":"399","severity":1,"message":"449","line":9,"column":40,"nodeType":"401","messageId":"402","endLine":9,"endColumn":48},{"ruleId":"399","severity":1,"message":"450","line":29,"column":9,"nodeType":"401","messageId":"402","endLine":29,"endColumn":16},{"ruleId":"418","severity":1,"message":"451","line":56,"column":6,"nodeType":"420","endLine":56,"endColumn":8,"suggestions":"452"},{"ruleId":"418","severity":1,"message":"453","line":61,"column":6,"nodeType":"420","endLine":61,"endColumn":16,"suggestions":"454"},{"ruleId":"399","severity":1,"message":"455","line":2,"column":3,"nodeType":"401","messageId":"402","endLine":2,"endColumn":9},{"ruleId":"399","severity":1,"message":"456","line":8,"column":3,"nodeType":"401","messageId":"402","endLine":8,"endColumn":13},{"ruleId":"399","severity":1,"message":"457","line":10,"column":3,"nodeType":"401","messageId":"402","endLine":10,"endColumn":8},{"ruleId":"418","severity":1,"message":"458","line":71,"column":6,"nodeType":"420","endLine":71,"endColumn":15,"suggestions":"459"},{"ruleId":"399","severity":1,"message":"426","line":15,"column":10,"nodeType":"401","messageId":"402","endLine":15,"endColumn":14},{"ruleId":"399","severity":1,"message":"460","line":36,"column":5,"nodeType":"401","messageId":"402","endLine":36,"endColumn":21},{"ruleId":"399","severity":1,"message":"461","line":40,"column":5,"nodeType":"401","messageId":"402","endLine":40,"endColumn":13},{"ruleId":"418","severity":1,"message":"462","line":51,"column":6,"nodeType":"420","endLine":51,"endColumn":8,"suggestions":"463"},{"ruleId":"399","severity":1,"message":"464","line":1,"column":8,"nodeType":"401","messageId":"402","endLine":1,"endColumn":13},{"ruleId":"399","severity":1,"message":"465","line":7,"column":3,"nodeType":"401","messageId":"402","endLine":7,"endColumn":9},{"ruleId":"399","severity":1,"message":"466","line":10,"column":10,"nodeType":"401","messageId":"402","endLine":10,"endColumn":34},{"ruleId":"399","severity":1,"message":"450","line":21,"column":9,"nodeType":"401","messageId":"402","endLine":21,"endColumn":16},{"ruleId":"418","severity":1,"message":"467","line":42,"column":6,"nodeType":"420","endLine":42,"endColumn":13,"suggestions":"468"},{"ruleId":"399","severity":1,"message":"469","line":4,"column":10,"nodeType":"401","messageId":"402","endLine":4,"endColumn":18},{"ruleId":"399","severity":1,"message":"450","line":21,"column":9,"nodeType":"401","messageId":"402","endLine":21,"endColumn":16},{"ruleId":"399","severity":1,"message":"470","line":23,"column":36,"nodeType":"401","messageId":"402","endLine":23,"endColumn":41},{"ruleId":"418","severity":1,"message":"471","line":49,"column":6,"nodeType":"420","endLine":49,"endColumn":8,"suggestions":"472"},{"ruleId":"399","severity":1,"message":"457","line":10,"column":3,"nodeType":"401","messageId":"402","endLine":10,"endColumn":8},{"ruleId":"399","severity":1,"message":"466","line":18,"column":10,"nodeType":"401","messageId":"402","endLine":18,"endColumn":34},{"ruleId":"399","severity":1,"message":"473","line":19,"column":8,"nodeType":"401","messageId":"402","endLine":19,"endColumn":23},"no-native-reassign",["474"],"no-negated-in-lhs",["475"],"no-unused-vars","'UnderConstruction' is defined but never used.","Identifier","unusedVar","'AOrders' is defined but never used.","'pxToRem' is assigned a value but never used.","'DomainPropTypes' is defined but never used.",["474"],["475"],"'useRouteMatch' is defined but never used.","'fade' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.",["474"],["475"],"'registerNow' is defined but never used.","'InputBase' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTrendingProducts'. Either include it or remove the dependency array.","ArrayExpression",["476"],"React Hook useEffect has missing dependencies: 'setLoading' and 'usrBaseInfo.is_first_login'. Either include them or remove the dependency array.",["477"],"React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.",["478"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["479"],"React Hook useEffect has missing dependencies: 'pid' and 'setLoading'. Either include them or remove the dependency array.",["480"],"'QuestionAnswerIcon' is defined but never used.","'register' is assigned a value but never used.",["481"],["482"],"React Hook useEffect has missing dependencies: 'props.trending', 'setLoading', and 'setSnackbar'. Either include them or remove the dependency array.",["483"],"React Hook useEffect has missing dependencies: 'props.trending' and 'setLoading'. Either include them or remove the dependency array.",["484"],"React Hook useEffect has missing dependencies: 'code', 'history', 'id', 'setLoading', and 'setSnackbar'. Either include them or remove the dependency array.",["485"],"React Hook useEffect has missing dependencies: 'setLoading' and 'url'. Either include them or remove the dependency array.",["486"],["487"],["488"],"React Hook useEffect has missing dependencies: 'setLoading', 'setUsrAdresses', and 'usrAdresses'. Either include them or remove the dependency array.",["489"],"'order' is assigned a value but never used.","'Grid' is defined but never used.","'useState' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCartItem' and 'setLoading'. Either include them or remove the dependency array.",["490"],"React Hook useEffect has a missing dependency: 'setSelectedItems'. Either include it or remove the dependency array.",["491"],"'Avatar' is defined but never used.","'IconButton' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'props.id', 'selectedItems', and 'setSelectedItems'. Either include them or remove the dependency array.",["492"],"'setSelectedItems' is assigned a value but never used.","'razorPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setLastProductAdded', 'setLoading', 'setUsrAdresses', and 'usrAdresses'. Either include them or remove the dependency array.",["493"],"'axios' is defined but never used.","'useRef' is defined but never used.","'fetchOrderDetailsFinally' is defined but never used.","React Hook useEffect has missing dependencies: 'selectedItems', 'setLoading', and 'setSnackbar'. Either include them or remove the dependency array.",["494"],"'Redirect' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.admin' and 'setLoading'. Either include them or remove the dependency array.",["495"],"'orderProcessing' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"500","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},"Update the dependencies array to be: [setTrendingProducts]",{"range":"535","text":"536"},"Update the dependencies array to be: [setLoading, usrBaseInfo.is_first_login]",{"range":"537","text":"538"},"Update the dependencies array to be: [setLoading, usrBaseInfo]",{"range":"539","text":"540"},"Update the dependencies array to be: [history, token]",{"range":"541","text":"542"},"Update the dependencies array to be: [pid, setLoading]",{"range":"543","text":"544"},{"range":"545","text":"540"},"Update the dependencies array to be: [setLoading]",{"range":"546","text":"547"},"Update the dependencies array to be: [page, props.trending, setLoading, setSnackbar]",{"range":"548","text":"549"},"Update the dependencies array to be: [query, page, props.trending, setLoading]",{"range":"550","text":"551"},"Update the dependencies array to be: [code, history, id, setLoading, setSnackbar]",{"range":"552","text":"553"},"Update the dependencies array to be: [setLoading, url]",{"range":"554","text":"555"},"Update the dependencies array to be: [aData, setLoading]",{"range":"556","text":"557"},"Update the dependencies array to be: [history]",{"range":"558","text":"559"},"Update the dependencies array to be: [setLoading, setUsrAdresses, usrAdresses]",{"range":"560","text":"561"},"Update the dependencies array to be: [setCartItem, setLoading]",{"range":"562","text":"563"},"Update the dependencies array to be: [cartItem, setSelectedItems]",{"range":"564","text":"565"},"Update the dependencies array to be: [checked, props.id, selectedItems, setSelectedItems]",{"range":"566","text":"567"},"Update the dependencies array to be: [setLastProductAdded, setLoading, setUsrAdresses, usrAdresses]",{"range":"568","text":"569"},"Update the dependencies array to be: [order, selectedItems, setLoading, setSnackbar]",{"range":"570","text":"571"},"Update the dependencies array to be: [props.admin, setLoading]",{"range":"572","text":"573"},[1068,1070],"[setTrendingProducts]",[1107,1109],"[setLoading, usrBaseInfo.is_first_login]",[1675,1688],"[setLoading, usrBaseInfo]",[1107,1114],"[history, token]",[1531,1533],"[pid, setLoading]",[859,872],[970,972],"[setLoading]",[1803,1809],"[page, props.trending, setLoading, setSnackbar]",[1949,1962],"[query, page, props.trending, setLoading]",[1138,1140],"[code, history, id, setLoading, setSnackbar]",[1469,1471],"[setLoading, url]",[1973,1980],"[aData, setLoading]",[267,269],"[history]",[2655,2657],"[setLoading, setUsrAdresses, usrAdresses]",[1435,1437],"[setCartItem, setLoading]",[1561,1571],"[cartItem, setSelectedItems]",[1914,1923],"[checked, props.id, selectedItems, setSelectedItems]",[1282,1284],"[setLastProductAdded, setLoading, setUsrAdresses, usrAdresses]",[1239,1246],"[order, selectedItems, setLoading, setSnackbar]",[1327,1329],"[props.admin, setLoading]"]