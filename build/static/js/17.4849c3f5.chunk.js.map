{"version":3,"sources":["pages/ProfileUpdate.js"],"names":["useStyles","makeStyles","theme","root","_defineProperty","padding","paddingBottom","spacing","marginTop","minHeight","breakpoints","up","input","width","marginBottom","ProfileUpdate","_errors2$phone","_errors$curpass","_errors$password","_errors$rePass","history","useHistory","_useContext","useContext","UIContext","usrBaseInfo","setUsrBaseInfo","pass","setPass","rePass","setRePass","curPass","setCurPass","setLoading","setSnackbar","usrAdresses","setUsrAdresses","classes","useTheme","_useForm","useForm","register2","register","handleSubmit2","handleSubmit","errors2","errors","_useForm2","useEffect","fetchAddress","localStorage","getItem","_jsxs","Grid","container","item","direction","className","children","xs","justify","_jsx","Typography","variant","style","fontWeight","color","full_name","opacity","email","is_artist","Button","onClick","patchUsrDetails","is_first_login","size","type","_objectSpread","palette","background","gradient","autoComplete","onSubmit","data","phone_number","md","TextField","label","name","defaultValue","onChange","e","target","value","trim","InputLabelProps","shrink","placeholder","inputRef","required","pattern","message","error","Boolean","phone","helperText","borderRadius","secondary","light","loginButton","new_password","re_new_password","current_password","config","method","url","concat","process","REACT_APP_URL","headers","Authorization","axios","then","response","catch","_error$response$data$","_error$response$data$2","_error$response$data$3","_error$response$data$4","_error$response$data$5","password","date_of_birth","curpass","validate","map","i","sm","Address","id","a_id","city","pincode","pin_code","state","street","address_type","NewAddress","Redirect","to"],"mappings":"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","file":"static/js/17.4849c3f5.chunk.js","sourcesContent":["import {\n  Button,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect, useHistory } from \"react-router\";\nimport { fetchAddress } from \"../API/Get\";\nimport { patchUsrDetails } from \"../API/Patch\";\nimport { UIContext } from \"../Context/UIContext\";\nimport Address from \"../ui/Address\";\nimport NewAddress from \"../ui/NewAddress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0 15px\",\n    paddingBottom: theme.spacing(20),\n    marginTop: theme.spacing(4),\n    minHeight: \"100vh\",\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"0vh 3.2%\",\n      paddingBottom: theme.spacing(20),\n    },\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst ProfileUpdate = () => {\n  const history = useHistory();\n  const {\n    usrBaseInfo,\n    setUsrBaseInfo,\n    pass,\n    setPass,\n    rePass,\n    setRePass,\n    curPass,\n    setCurPass,\n    setLoading,\n    setSnackbar,\n    usrAdresses,\n    setUsrAdresses,\n  } = useContext(UIContext);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const {\n    register: register2,\n    handleSubmit: handleSubmit2,\n    errors: errors2,\n  } = useForm();\n  const { register, handleSubmit, errors } = useForm();\n\n  const handlePhoneChange = () => {\n    const data = { phone_number: usrBaseInfo.phone_number };\n    patchUsrDetails(data, setLoading, setSnackbar);\n  };\n  const handlePassChange = () => {\n    setLoading(true);\n    var data = {\n      new_password: curPass,\n      re_new_password: pass,\n      current_password: rePass,\n    };\n\n    var config = {\n      method: \"post\",\n      url: `${process.env.REACT_APP_URL}auth/users/set_password/`,\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"Token\")}`,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setLoading(false);\n        // console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        setLoading(false);\n        setSnackbar({\n          value: true,\n          message:\n            error.response.data.email?.[0] ||\n            error.response.data.password?.[0] ||\n            error.response.data.phone_number?.[0] ||\n            error.response.data.date_of_birth?.[0] ||\n            error.response.data.full_name?.[0],\n          type: \"error\",\n        });\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    if (!usrAdresses) {\n      fetchAddress(setLoading, setUsrAdresses);\n    }\n    return () => {};\n  }, []);\n\n  if (!localStorage.getItem(\"Token\")) {\n    return <Redirect to='/login' />;\n  }\n\n  return (\n    <Grid container item direction='column' className={classes.root}>\n      <Grid container xs={12} item justify='space-between'>\n        <Grid item>\n          <Typography\n            variant='h2'\n            style={{\n              fontWeight: \"bold\",\n              marginBottom: theme.spacing(0.5),\n              // color: \"#40567A\",\n            }}\n            color='secondary'>\n            {usrBaseInfo?.full_name}\n          </Typography>\n          <Typography\n            variant='h5'\n            style={{ marginBottom: theme.spacing(5), opacity: \"0.8\" }}\n            color='secondary'>\n            Email : {usrBaseInfo?.email}\n          </Typography>\n        </Grid>\n        {usrBaseInfo.is_artist ? null : (\n          <Grid item>\n            <Button\n              // component={Link}\n              // to='/artist/signup'\n              onClick={() => {\n                const data = { is_first_login: true, is_artist: true };\n                patchUsrDetails(\n                  data,\n                  setLoading,\n                  setSnackbar,\n                  history,\n                  false,\n                  true,\n                );\n              }}\n              variant='contained'\n              size='large'\n              color='secondary'\n              type='submit'\n              style={{\n                ...theme.palette.background.gradient,\n\n                marginTop: theme.spacing(1),\n                padding: \"1rem 1.5rem\",\n              }}>\n              <Typography variant='h5'>Become an artist</Typography>\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n      <Grid item>\n        <Typography\n          variant='h4'\n          style={{ marginBottom: theme.spacing(3) }}\n          color='secondary'>\n          Update phone\n        </Typography>\n      </Grid>\n      <form\n        style={{ width: \"100%\" }}\n        autoComplete='off'\n        onSubmit={handleSubmit2(handlePhoneChange)}>\n        <Grid container item spacing={2}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              type='tel'\n              className={classes.input}\n              label='Phone Number'\n              name='phone'\n              variant='outlined'\n              color='secondary'\n              defaultValue={usrBaseInfo.phone_number}\n              onChange={(e) => {\n                setUsrBaseInfo({\n                  ...usrBaseInfo,\n                  phone_number: e.target.value.trim(),\n                });\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter new Phone number'\n              inputRef={register2({\n                required: \"Phone Number is required\",\n                pattern: {\n                  value: /([+]?\\d{1,2}[.-\\s]?)?(\\d{3}[.-]?){2}\\d{4}/,\n                  message: \"Invalid Phone Number\",\n                },\n              })}\n              error={Boolean(errors2.phone)}\n              helperText={errors2.phone?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Button\n              style={{\n                marginBottom: theme.spacing(4),\n                padding: \"18px 80px\",\n                borderRadius: \"4px\",\n                background: theme.palette.secondary.light,\n              }}\n              variant='contained'\n              size='large'\n              type='submit'\n              color='secondary'\n              className={classes.loginButton}>\n              <Typography variant='h5'>Save</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Grid item>\n        <Typography\n          variant='h4'\n          style={{ marginBottom: theme.spacing(3) }}\n          color='secondary'>\n          Update password\n        </Typography>\n      </Grid>\n      <form\n        style={{ width: \"100%\" }}\n        autoComplete='off'\n        onSubmit={handleSubmit(handlePassChange)}>\n        <Grid container item spacing={2}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              type='password'\n              className={classes.input}\n              label='Current Password'\n              name='curpass'\n              variant='outlined'\n              color='secondary'\n              value={curPass}\n              onChange={(e) => {\n                setCurPass(e.target.value.trim());\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter your current password'\n              inputRef={register({\n                required: \"Current password is required\",\n              })}\n              error={Boolean(errors.curpass)}\n              helperText={errors.curpass?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              className={classes.input}\n              label='New password'\n              name='password'\n              type='password'\n              variant='outlined'\n              color='secondary'\n              defaultValue={pass}\n              onChange={(e) => {\n                setPass(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Enter password'\n              inputRef={register({ required: \"Please enter a password\" })}\n              error={Boolean(errors.password)}\n              helperText={errors.password?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              className={classes.input}\n              label='Re-Enter Password'\n              name='rePass'\n              type='password'\n              variant='outlined'\n              color='secondary'\n              defaultValue={rePass}\n              onChange={(e) => {\n                setRePass(e.target.value);\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder='Re-enter password to confirm'\n              inputRef={register({\n                required: \"Please Re-enter your Password\",\n                validate: (rePass) =>\n                  pass !== rePass ? \"Password does not match\" : null,\n              })}\n              error={Boolean(errors.rePass)}\n              helperText={errors.rePass?.message}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Button\n              style={{\n                marginBottom: theme.spacing(4),\n                padding: \"18px 80px\",\n                borderRadius: \"4px\",\n                background: theme.palette.secondary.light,\n              }}\n              variant='contained'\n              size='large'\n              type='submit'\n              color='secondary'\n              className={classes.loginButton}>\n              <Typography variant='h5'>Save</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Grid item>\n        <Typography\n          variant='h4'\n          style={{ marginBottom: theme.spacing(3) }}\n          color='secondary'>\n          Address\n        </Typography>\n      </Grid>\n      <Grid container item spacing={8}>\n        {usrAdresses\n          ? usrAdresses?.map((data, i) => {\n              return (\n                <Grid key={i} item xs={12} sm={6} md={4}>\n                  <Address\n                    name={usrBaseInfo?.full_name}\n                    id={data.a_id}\n                    city={data.city}\n                    pincode={data.pin_code}\n                    state={data.state}\n                    street={data.street}\n                    type={data.address_type}\n                  />\n                </Grid>\n              );\n            })\n          : null}\n\n        <Grid item xs={12} sm={6} md={4}>\n          <NewAddress />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProfileUpdate;\n"],"sourceRoot":""}